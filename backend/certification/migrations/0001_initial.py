# Generated by Django 5.2.6 on 2025-09-24 20:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cattle', '0007_alter_animalcertification_animal'),
        ('core', '0002_blockchainnetwork_crosschainmanager_starknetcontract_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CertificationContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_name', models.CharField(max_length=100)),
                ('contract_version', models.CharField(default='1.0.0', max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('interface_definition', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('deployment_block', models.BigIntegerField(default=0)),
                ('deployment_date', models.DateTimeField(auto_now_add=True)),
                ('contract_type', models.CharField(choices=[('CERT_REGISTRY', 'Registro de Certificaciones'), ('AUDITOR_REGISTRY', 'Registro de Auditores'), ('STANDARD_REGISTRY', 'Registro de Estándares')], max_length=20)),
                ('supports_erc_1484', models.BooleanField(default=False, verbose_name='Soporta ERC-1484')),
                ('supports_erc_1888', models.BooleanField(default=False, verbose_name='Soporta ERC-1888')),
                ('max_certifications', models.IntegerField(default=1000, verbose_name='Máximo de Certificaciones')),
                ('certification_fee', models.DecimalField(blank=True, decimal_places=18, max_digits=20, null=True, verbose_name='Tarifa de Certificación')),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.blockchainnetwork')),
            ],
            options={
                'verbose_name': 'Contrato de Certificación',
                'verbose_name_plural': 'Contratos de Certificación',
            },
        ),
        migrations.CreateModel(
            name='CertificationStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del Estándar')),
                ('code', models.CharField(max_length=50, verbose_name='Código del Estándar')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('version', models.CharField(default='1.0', max_length=20, verbose_name='Versión')),
                ('grading_system', models.CharField(choices=[('LETTER', 'Sistema de Letras (A, B, C)'), ('SCORE', 'Sistema de Puntuación (1-100)'), ('STAR', 'Sistema de Estrellas (1-5)'), ('BINARY', 'Aprobado/No Aprobado')], max_length=10, verbose_name='Sistema de Calificación')),
                ('passing_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Puntuación Mínima')),
                ('requirements', models.JSONField(default=dict, help_text='Estructura JSON con criterios y puntuaciones', verbose_name='Requisitos de Certificación')),
                ('validity_days', models.IntegerField(default=365, verbose_name='Validez (días)')),
                ('requires_renewal', models.BooleanField(default=True, verbose_name='Requiere Renovación')),
                ('renewal_notice_days', models.IntegerField(default=30, verbose_name='Aviso de Renovación (días antes)')),
                ('requires_audit', models.BooleanField(default=True, verbose_name='Requiere Auditoría')),
                ('audit_frequency_days', models.IntegerField(default=180, verbose_name='Frecuencia de Auditoría (días)')),
                ('blockchain_template', models.JSONField(default=dict, help_text='Estructura para certificados en blockchain', verbose_name='Plantilla Blockchain')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Estándar de Certificación',
                'verbose_name_plural': 'Estándares de Certificación',
                'ordering': ['certification_body', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope_type', models.CharField(choices=[('GLOBAL', 'Global (Toda la operación)'), ('BATCH', 'Por Lote'), ('ANIMAL', 'Por Animal'), ('PRODUCT', 'Por Producto')], default='GLOBAL', max_length=10, verbose_name='Alcance')),
                ('certificate_number', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Número de Certificado')),
                ('grade', models.CharField(choices=[('A', 'Grado A - Excelente'), ('B', 'Grado B - Bueno'), ('C', 'Grado C - Básico'), ('P', 'Aprobado'), ('F', 'No Aprobado')], max_length=1, verbose_name='Grado')),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Puntuación')),
                ('issue_date', models.DateField(verbose_name='Fecha de Emisión')),
                ('expiry_date', models.DateField(verbose_name='Fecha de Expiración')),
                ('status', models.CharField(choices=[('DRAFT', 'Borrador'), ('PENDING', 'Pendiente de Aprobación'), ('APPROVED', 'Aprobada'), ('REJECTED', 'Rechazada'), ('EXPIRED', 'Expirada'), ('REVOKED', 'Revocada'), ('SUSPENDED', 'Suspendida')], default='DRAFT', max_length=10, verbose_name='Estado')),
                ('audit_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Auditoría')),
                ('audit_report', models.TextField(blank=True, verbose_name='Informe de Auditoría')),
                ('next_audit_due', models.DateField(blank=True, null=True, verbose_name='Próxima Auditoría')),
                ('renewal_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Renovación')),
                ('suspension_reason', models.TextField(blank=True, verbose_name='Motivo de Suspensión')),
                ('revocation_cause', models.TextField(blank=True, verbose_name='Causa de Revocación')),
                ('supporting_documents', models.JSONField(default=list, help_text='Lista de URLs o hashes de documentos', verbose_name='Documentos de Soporte')),
                ('blockchain_certificate', models.BooleanField(default=False, verbose_name='Certificado en Blockchain')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('animals', models.ManyToManyField(blank=True, related_name='certification_certifications', to='cattle.animal', verbose_name='Animales Certificados')),
                ('approved_by', models.ForeignKey(blank=True, limit_choices_to={'role__in': ['ADMIN', 'AUDITOR']}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_certifications', to=settings.AUTH_USER_MODEL, verbose_name='Aprobado por')),
                ('auditor', models.ForeignKey(blank=True, limit_choices_to={'role': 'AUDITOR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audited_certifications', to=settings.AUTH_USER_MODEL, verbose_name='Auditor')),
                ('batches', models.ManyToManyField(blank=True, related_name='certifications', to='cattle.batch', verbose_name='Lotes Certificados')),
                ('certified_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_certifications', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('multichain_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.chainspecificmodel', verbose_name='Datos Multichain')),
                ('standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='certification.certificationstandard')),
            ],
            options={
                'verbose_name': 'Certificación',
                'verbose_name_plural': 'Certificaciones',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='CertificationAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_type', models.CharField(choices=[('INITIAL', 'Auditoría Inicial'), ('RENEWAL', 'Auditoría de Renovación'), ('FOLLOW_UP', 'Auditoría de Seguimiento'), ('UNSCHEDULED', 'Auditoría No Programada')], default='INITIAL', max_length=12, verbose_name='Tipo de Auditoría')),
                ('audit_date', models.DateField(verbose_name='Fecha de Auditoría')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Puntuación')),
                ('findings', models.JSONField(default=dict, verbose_name='Hallazgos')),
                ('recommendations', models.TextField(verbose_name='Recomendaciones')),
                ('compliance_level', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Nivel de Cumplimiento (%)')),
                ('blockchain_hash', models.CharField(blank=True, max_length=255, verbose_name='Hash Blockchain')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auditor', models.ForeignKey(limit_choices_to={'role': 'AUDITOR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Auditor')),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detailed_audits', to='certification.certification')),
            ],
            options={
                'verbose_name': 'Auditoría Detallada de Certificación',
                'verbose_name_plural': 'Auditorías Detalladas de Certificación',
                'ordering': ['-audit_date'],
            },
        ),
        migrations.CreateModel(
            name='StarknetCertificationContract',
            fields=[
                ('certificationcontract_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='certification.certificationcontract')),
                ('class_hash', models.CharField(max_length=255, unique=True)),
                ('supports_cairo_standards', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Contrato de Certificación Starknet',
                'verbose_name_plural': 'Contratos de Certificación Starknet',
            },
            bases=('certification.certificationcontract',),
        ),
        migrations.CreateModel(
            name='GlobalCertificationBody',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre del Organismo')),
                ('acronym', models.CharField(max_length=20, verbose_name='Sigla')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('certification_type', models.CharField(choices=[('ORGANIC', 'Orgánico'), ('ANIMAL_WELFARE', 'Bienestar Animal'), ('SUSTAINABILITY', 'Sostenibilidad'), ('FOOD_SAFETY', 'Inocuidad Alimentaria'), ('ORIGIN', 'Denominación de Origen'), ('QUALITY', 'Calidad Premium'), ('CARBON_CREDIT', 'Créditos de Carbono')], max_length=20, verbose_name='Tipo de Certificación')),
                ('website', models.URLField(blank=True, verbose_name='Sitio Web')),
                ('country', models.CharField(max_length=100, verbose_name='País de Origen')),
                ('international_scope', models.BooleanField(default=False, verbose_name='Alcance Internacional')),
                ('accreditation_number', models.CharField(blank=True, help_text='Número oficial de acreditación del organismo', max_length=100, unique=True, verbose_name='Número de Acreditación')),
                ('legal_name', models.CharField(blank=True, max_length=200, verbose_name='Razón Social')),
                ('recognized_standards', models.JSONField(default=list, help_text='Lista de estándares internacionales reconocidos', verbose_name='Estándares Reconocidos')),
                ('issues_blockchain_certs', models.BooleanField(default=True, verbose_name='Emite Certificados Blockchain')),
                ('preferred_networks', models.JSONField(default=list, help_text='Redes blockchain donde emite certificados', verbose_name='Redes Preferidas')),
                ('supported_countries', models.JSONField(blank=True, default=list, verbose_name='Países Soportados')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_user', models.ForeignKey(limit_choices_to={'role__in': ['AUDITOR', 'ADMIN', 'CERTIFICATION_BODY']}, on_delete=django.db.models.deletion.CASCADE, related_name='managed_certification_bodies', to=settings.AUTH_USER_MODEL, verbose_name='Usuario Administrador')),
            ],
            options={
                'verbose_name': 'Organismo de Certificación Global',
                'verbose_name_plural': 'Organismos de Certificación Global',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='certificationstandard',
            name='certification_body',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standards', to='certification.globalcertificationbody'),
        ),
        migrations.CreateModel(
            name='CertificationAuditTrail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50, verbose_name='Acción')),
                ('previous_state', models.JSONField(verbose_name='Estado Anterior')),
                ('new_state', models.JSONField(verbose_name='Nuevo Estado')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y Hora')),
                ('blockchain_hash', models.CharField(blank=True, max_length=255, verbose_name='Hash Blockchain')),
                ('certification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_trail', to='certification.certification')),
                ('performed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Realizado por')),
            ],
            options={
                'verbose_name': 'Registro de Auditoría de Certificación',
                'verbose_name_plural': 'Registros de Auditoría de Certificación',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['certification', 'timestamp'], name='certificati_certifi_93c697_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='certification',
            index=models.Index(fields=['certified_entity', 'status'], name='certificati_certifi_8b7764_idx'),
        ),
        migrations.AddIndex(
            model_name='certification',
            index=models.Index(fields=['standard', 'grade'], name='certificati_standar_8d2589_idx'),
        ),
        migrations.AddIndex(
            model_name='certification',
            index=models.Index(fields=['expiry_date'], name='certificati_expiry__49664a_idx'),
        ),
        migrations.AddIndex(
            model_name='certification',
            index=models.Index(fields=['status'], name='certificati_status_379c62_idx'),
        ),
        migrations.AddIndex(
            model_name='certification',
            index=models.Index(fields=['scope_type'], name='certificati_scope_t_ff99d2_idx'),
        ),
        migrations.AddIndex(
            model_name='certification',
            index=models.Index(fields=['blockchain_certificate'], name='certificati_blockch_59c921_idx'),
        ),
        migrations.AddIndex(
            model_name='globalcertificationbody',
            index=models.Index(fields=['certification_type'], name='certificati_certifi_8b2f0e_idx'),
        ),
        migrations.AddIndex(
            model_name='globalcertificationbody',
            index=models.Index(fields=['international_scope'], name='certificati_interna_b64d97_idx'),
        ),
        migrations.AddIndex(
            model_name='globalcertificationbody',
            index=models.Index(fields=['is_active'], name='certificati_is_acti_10a976_idx'),
        ),
        migrations.AddIndex(
            model_name='globalcertificationbody',
            index=models.Index(fields=['accreditation_number'], name='certificati_accredi_114406_idx'),
        ),
        migrations.AddIndex(
            model_name='certificationstandard',
            index=models.Index(fields=['code', 'version'], name='certificati_code_85f830_idx'),
        ),
        migrations.AddIndex(
            model_name='certificationstandard',
            index=models.Index(fields=['is_active'], name='certificati_is_acti_051a2e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='certificationstandard',
            unique_together={('certification_body', 'code', 'version')},
        ),
    ]
