# Generated by Django 5.2.5 on 2025-09-02 21:00

import core.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlockchainEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('MINT', 'NFT Minted'), ('TRANSFER', 'Token Transfer'), ('ROLE_ADD', 'Role Assigned'), ('ROLE_REMOVE', 'Role Removed'), ('HEALTH_UPDATE', 'Health Status Updated'), ('LOCATION_UPDATE', 'Location Updated'), ('BATCH_CREATED', 'Batch Created'), ('TOKEN_MINTED', 'Tokens Minted'), ('IOT_DATA', 'IoT Data Received')], max_length=20)),
                ('transaction_hash', models.CharField(max_length=66, validators=[core.models.validate_transaction_hash])),
                ('block_number', models.BigIntegerField()),
                ('from_address', models.CharField(blank=True, max_length=42, validators=[core.models.validate_ethereum_address])),
                ('to_address', models.CharField(blank=True, max_length=42, validators=[core.models.validate_ethereum_address])),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Evento Blockchain',
                'verbose_name_plural': 'Eventos Blockchain',
                'ordering': ['-block_number', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContractInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_type', models.CharField(choices=[('NFT', 'Animal NFT'), ('TOKEN', 'Ganado Token'), ('REGISTRY', 'Registry'), ('IOT', 'IoT Manager')], max_length=10)),
                ('action_type', models.CharField(choices=[('MINT', 'Mint'), ('TRANSFER', 'Transfer'), ('BURN', 'Burn'), ('UPDATE', 'Update'), ('ROLE_GRANT', 'Grant Role'), ('ROLE_REVOKE', 'Revoke Role'), ('APPROVE', 'Approve'), ('BATCH_MINT', 'Batch Mint'), ('HEALTH_UPDATE', 'Update Health')], max_length=15)),
                ('transaction_hash', models.CharField(max_length=66, validators=[core.models.validate_transaction_hash])),
                ('block_number', models.BigIntegerField()),
                ('caller_address', models.CharField(max_length=42, validators=[core.models.validate_ethereum_address])),
                ('target_address', models.CharField(blank=True, max_length=42, validators=[core.models.validate_ethereum_address])),
                ('parameters', models.JSONField(default=dict)),
                ('gas_used', models.BigIntegerField(blank=True, null=True)),
                ('gas_price', models.BigIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('PENDING', 'Pending')], default='PENDING', max_length=10)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Interacción con Contrato',
                'verbose_name_plural': 'Interacciones con Contratos',
                'ordering': ['-block_number', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GasPriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gas_price', models.BigIntegerField()),
                ('gas_price_gwei', models.FloatField()),
                ('block_number', models.BigIntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Historial de Gas',
                'verbose_name_plural': 'Historial de Gas',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NetworkState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_block_number', models.BigIntegerField(default=0)),
                ('last_sync_time', models.DateTimeField(auto_now=True)),
                ('average_gas_price', models.BigIntegerField(default=0)),
                ('active_nodes', models.IntegerField(default=0)),
                ('chain_id', models.IntegerField(default=80002)),
                ('sync_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('network_name', models.CharField(default='Polygon Amoy', max_length=50)),
                ('rpc_url', models.CharField(default='https://polygon-amoy.infura.io/v3/', max_length=255)),
                ('block_time', models.FloatField(default=2.1)),
                ('native_currency', models.CharField(default='MATIC', max_length=20)),
                ('is_testnet', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Estado de Red',
                'verbose_name_plural': 'Estados de Red',
            },
        ),
        migrations.CreateModel(
            name='SmartContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contract_type', models.CharField(choices=[('NFT', 'Animal NFT'), ('TOKEN', 'Ganado Token'), ('REGISTRY', 'Registry'), ('IOT', 'IoT Manager'), ('BATCH', 'Batch Manager')], max_length=10)),
                ('address', models.CharField(max_length=42, unique=True, validators=[core.models.validate_ethereum_address])),
                ('abi', models.JSONField()),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('deployment_block', models.BigIntegerField()),
                ('deployment_tx_hash', models.CharField(max_length=66, validators=[core.models.validate_transaction_hash])),
                ('deployer_address', models.CharField(max_length=42, validators=[core.models.validate_ethereum_address])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('implementation_address', models.CharField(blank=True, max_length=42, validators=[core.models.validate_ethereum_address])),
                ('proxy_address', models.CharField(blank=True, max_length=42, validators=[core.models.validate_ethereum_address])),
                ('is_upgradeable', models.BooleanField(default=False)),
                ('admin_address', models.CharField(blank=True, max_length=42, validators=[core.models.validate_ethereum_address])),
            ],
            options={
                'verbose_name': 'Contrato Inteligente',
                'verbose_name_plural': 'Contratos Inteligentes',
            },
        ),
        migrations.CreateModel(
            name='TransactionPool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_hash', models.CharField(max_length=66, unique=True, validators=[core.models.validate_transaction_hash])),
                ('raw_transaction', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('CONFIRMED', 'Confirmed'), ('FAILED', 'Failed')], default='PENDING', max_length=10)),
                ('retry_count', models.IntegerField(default=0)),
                ('last_retry', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transacción Pendiente',
                'verbose_name_plural': 'Transacciones Pendientes',
            },
        ),
    ]
