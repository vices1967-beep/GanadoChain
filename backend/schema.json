{
    "openapi": "3.0.3",
    "info": {
        "title": "GanadoChain API",
        "version": "1.0.0",
        "description": "Blockchain Cattle Tracking System"
    },
    "paths": {
        "/api/analytics/blockchain/": {
            "get": {
                "operationId": "api_analytics_blockchain_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/blockchain/{days}/": {
            "get": {
                "operationId": "api_analytics_blockchain_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "days",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/genetic/": {
            "get": {
                "operationId": "api_analytics_genetic_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/health-trends/": {
            "get": {
                "operationId": "api_analytics_health_trends_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/health-trends/{days}/": {
            "get": {
                "operationId": "api_analytics_health_trends_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "days",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/predictive/": {
            "get": {
                "operationId": "api_analytics_predictive_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/reports/custom/": {
            "get": {
                "operationId": "api_analytics_reports_custom_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/reports/custom/{report_type}/": {
            "get": {
                "operationId": "api_analytics_reports_custom_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "report_type",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/reports/custom/{report_type}/{days}/": {
            "get": {
                "operationId": "api_analytics_reports_custom_retrieve_3",
                "parameters": [
                    {
                        "in": "path",
                        "name": "days",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "report_type",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/supply-chain/": {
            "get": {
                "operationId": "api_analytics_supply_chain_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/sustainability/": {
            "get": {
                "operationId": "api_analytics_sustainability_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/analytics/system-performance/": {
            "get": {
                "operationId": "api_analytics_system_performance_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blockchain/advanced/contracts/admin/": {
            "get": {
                "operationId": "api_blockchain_advanced_contracts_admin_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSmartContractList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_blockchain_advanced_contracts_admin_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartContract"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartContract"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartContract"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmartContract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/advanced/contracts/admin/{id}/": {
            "get": {
                "operationId": "api_blockchain_advanced_contracts_admin_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmartContract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_blockchain_advanced_contracts_admin_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartContract"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartContract"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartContract"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmartContract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_blockchain_advanced_contracts_admin_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blockchain/advanced/contracts/admin/{id}/upgrade/": {
            "post": {
                "operationId": "api_blockchain_advanced_contracts_admin_upgrade_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartContract"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartContract"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SmartContract"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmartContract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/advanced/cross-chain/": {
            "post": {
                "operationId": "api_blockchain_advanced_cross_chain_create",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blockchain/advanced/events/subscribe/": {
            "post": {
                "operationId": "api_blockchain_advanced_events_subscribe_create",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blockchain/advanced/gas/optimize/": {
            "get": {
                "operationId": "api_blockchain_advanced_gas_optimize_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blockchain/animal/{animal_id}/history/": {
            "get": {
                "operationId": "api_blockchain_animal_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "animal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnimalHistory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/api/balance/": {
            "get": {
                "operationId": "api_blockchain_api_balance_retrieve",
                "description": "Vista para obtener balance de MATIC de una wallet",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blockchain/api/nft/animal/{animal_id}/": {
            "get": {
                "operationId": "api_blockchain_api_nft_animal_retrieve",
                "description": "Vista para obtener información del NFT de un animal",
                "parameters": [
                    {
                        "in": "path",
                        "name": "animal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blockchain/api/nft/verify/{animal_id}/": {
            "get": {
                "operationId": "api_blockchain_api_nft_verify_retrieve",
                "description": "Vista para verificar la autenticidad del NFT de un animal",
                "parameters": [
                    {
                        "in": "path",
                        "name": "animal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blockchain/api/token/balance/": {
            "get": {
                "operationId": "api_blockchain_api_token_balance_retrieve",
                "description": "Vista para obtener balance de tokens GANADO",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blockchain/assign-role/": {
            "post": {
                "operationId": "api_blockchain_assign_role_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssignRole"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/call-contract/": {
            "post": {
                "operationId": "api_blockchain_call_contract_create",
                "description": "Vista para llamadas genéricas a contratos",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractCall"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractCall"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ContractCall"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractCall"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/check-role/": {
            "get": {
                "operationId": "api_blockchain_check_role_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blockchain/contracts/": {
            "get": {
                "operationId": "api_blockchain_contracts_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSmartContractList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/contracts/{id}/": {
            "get": {
                "operationId": "api_blockchain_contracts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Contrato Inteligente.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SmartContract"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/create-batch/": {
            "post": {
                "operationId": "api_blockchain_create_batch_create",
                "description": "Vista para crear lotes en blockchain",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BlockchainBatchCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BlockchainBatchCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BlockchainBatchCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockchainBatchCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/events/": {
            "get": {
                "operationId": "api_blockchain_events_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedBlockchainEventList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/events/{id}/": {
            "get": {
                "operationId": "api_blockchain_events_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Evento Blockchain.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockchainEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/events/latest/": {
            "get": {
                "operationId": "api_blockchain_events_latest_retrieve",
                "description": "Obtener los eventos más recientes",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockchainEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/gas-price/": {
            "get": {
                "operationId": "api_blockchain_gas_price_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GasPrice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/gas-price-history/": {
            "get": {
                "operationId": "api_blockchain_gas_price_history_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGasPriceHistoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/gas-price-history/{id}/": {
            "get": {
                "operationId": "api_blockchain_gas_price_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Historial de Gas.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GasPriceHistory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/gas-price-history/latest/": {
            "get": {
                "operationId": "api_blockchain_gas_price_history_latest_retrieve",
                "description": "Obtener los últimos precios de gas",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GasPriceHistory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/interactions/": {
            "get": {
                "operationId": "api_blockchain_interactions_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedContractInteractionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/interactions/{id}/": {
            "get": {
                "operationId": "api_blockchain_interactions_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Interacción con Contrato.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractInteraction"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/interactions/stats/": {
            "get": {
                "operationId": "api_blockchain_interactions_stats_retrieve",
                "description": "Estadísticas de interacciones con contratos",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContractInteraction"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/iot/health-data/": {
            "post": {
                "operationId": "api_blockchain_iot_health_data_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTHealthData"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTHealthData"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTHealthData"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IoTHealthData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/mint/nft/": {
            "post": {
                "operationId": "api_blockchain_mint_nft_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MintNFT"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MintNFT"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MintNFT"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MintNFT"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/mint/tokens/": {
            "post": {
                "operationId": "api_blockchain_mint_tokens_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MintTokens"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MintTokens"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MintTokens"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MintTokens"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/network-state/": {
            "get": {
                "operationId": "api_blockchain_network_state_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNetworkStateList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/network-state/{id}/": {
            "get": {
                "operationId": "api_blockchain_network_state_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Estado de Red.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkState"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/network-state/current/": {
            "get": {
                "operationId": "api_blockchain_network_state_current_retrieve",
                "description": "Obtener el estado actual de la red",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkState"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/network/status/": {
            "get": {
                "operationId": "api_blockchain_network_status_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/stats/": {
            "get": {
                "operationId": "api_blockchain_stats_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockchainStats"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/subscribe-event/": {
            "post": {
                "operationId": "api_blockchain_subscribe_event_create",
                "description": "Vista para suscribirse a eventos de blockchain",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventSubscription"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EventSubscription"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EventSubscription"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventSubscription"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/transaction-pool/": {
            "get": {
                "operationId": "api_blockchain_transaction_pool_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTransactionPoolList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/transaction-pool/{id}/": {
            "get": {
                "operationId": "api_blockchain_transaction_pool_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Transacción Pendiente.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionPool"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/transaction-pool/{id}/retry/": {
            "post": {
                "operationId": "api_blockchain_transaction_pool_retry_create",
                "description": "Reintentar transacción pendiente",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Transacción Pendiente.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionPool"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionPool"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TransactionPool"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionPool"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/transaction-pool/pending/": {
            "get": {
                "operationId": "api_blockchain_transaction_pool_pending_retrieve",
                "description": "Obtener transacciones pendientes",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionPool"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/transaction/{tx_hash}/status/": {
            "get": {
                "operationId": "api_blockchain_transaction_status_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tx_hash",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blockchain/update-health/": {
            "post": {
                "operationId": "api_blockchain_update_health_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateHealth"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateHealth"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateHealth"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateHealth"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/": {
            "get": {
                "operationId": "api_cattle_animals_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAnimalList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_cattle_animals_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/": {
            "get": {
                "operationId": "api_cattle_animals_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_cattle_animals_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_cattle_animals_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAnimal"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAnimal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_cattle_animals_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/audit-trail/": {
            "get": {
                "operationId": "api_cattle_animals_audit_trail_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/audit_trail/": {
            "get": {
                "operationId": "api_cattle_animals_audit_trail_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/blockchain-events/": {
            "get": {
                "operationId": "api_cattle_animals_blockchain_events_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/blockchain_events/": {
            "get": {
                "operationId": "api_cattle_animals_blockchain_events_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/health-records/": {
            "get": {
                "operationId": "api_cattle_animals_health_records_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/health_records/": {
            "get": {
                "operationId": "api_cattle_animals_health_records_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/mint-nft/": {
            "post": {
                "operationId": "api_cattle_animals_mint_nft_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/mint_nft/": {
            "post": {
                "operationId": "api_cattle_animals_mint_nft_create_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/nft-info/": {
            "get": {
                "operationId": "api_cattle_animals_nft_info_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/nft_info/": {
            "get": {
                "operationId": "api_cattle_animals_nft_info_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/transfer/": {
            "post": {
                "operationId": "api_cattle_animals_transfer_create",
                "description": "Transferir animal a nuevo dueño",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/update-health/": {
            "post": {
                "operationId": "api_cattle_animals_update_health_create",
                "description": "Actualizar estado de salud del animal",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/update_health/": {
            "post": {
                "operationId": "api_cattle_animals_update_health_create_2",
                "description": "Actualizar estado de salud del animal",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Animal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/verify-nft/": {
            "get": {
                "operationId": "api_cattle_animals_verify_nft_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/{id}/verify_nft/": {
            "get": {
                "operationId": "api_cattle_animals_verify_nft_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Animal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Animal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/animals/search/": {
            "post": {
                "operationId": "api_cattle_animals_search_create",
                "description": "Búsqueda avanzada de animales",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/cattle/audit-trail/": {
            "get": {
                "operationId": "api_cattle_audit_trail_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCattleAuditTrailList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/audit-trail/{id}/": {
            "get": {
                "operationId": "api_cattle_audit_trail_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CattleAuditTrail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/": {
            "get": {
                "operationId": "api_cattle_batches_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedBatchList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_cattle_batches_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BatchCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/": {
            "get": {
                "operationId": "api_cattle_batches_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Lote.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_cattle_batches_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Lote.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_cattle_batches_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Lote.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBatch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBatch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBatch"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_cattle_batches_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Lote.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/add-animals/": {
            "post": {
                "operationId": "api_cattle_batches_add_animals_create",
                "description": "Añadir animales a un lote existente",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/add_animals/": {
            "post": {
                "operationId": "api_cattle_batches_add_animals_create_2",
                "description": "Añadir animales a un lote existente",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Lote.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/audit-trail/": {
            "get": {
                "operationId": "api_cattle_batches_audit_trail_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/audit_trail/": {
            "get": {
                "operationId": "api_cattle_batches_audit_trail_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Lote.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/blockchain-events/": {
            "get": {
                "operationId": "api_cattle_batches_blockchain_events_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/blockchain_events/": {
            "get": {
                "operationId": "api_cattle_batches_blockchain_events_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Lote.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/remove-animals/": {
            "post": {
                "operationId": "api_cattle_batches_remove_animals_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/remove_animals/": {
            "post": {
                "operationId": "api_cattle_batches_remove_animals_create_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Lote.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/update-status/": {
            "post": {
                "operationId": "api_cattle_batches_update_status_create",
                "description": "Actualizar estado del lote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/{id}/update_status/": {
            "post": {
                "operationId": "api_cattle_batches_update_status_create_2",
                "description": "Actualizar estado del lote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Lote.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/batches/search/": {
            "post": {
                "operationId": "api_cattle_batches_search_create",
                "description": "Búsqueda avanzada de lotes",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/cattle/blockchain-events/": {
            "get": {
                "operationId": "api_cattle_blockchain_events_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedBlockchainEventStateList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/blockchain-events/{id}/": {
            "get": {
                "operationId": "api_cattle_blockchain_events_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockchainEventState"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/health-records/": {
            "get": {
                "operationId": "api_cattle_health_records_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAnimalHealthRecordList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_cattle_health_records_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnimalHealthRecord"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnimalHealthRecord"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnimalHealthRecord"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnimalHealthRecord"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/cattle/health-records/{id}/": {
            "get": {
                "operationId": "api_cattle_health_records_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Registro de Salud.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnimalHealthRecord"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_cattle_health_records_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Registro de Salud.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnimalHealthRecord"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AnimalHealthRecord"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AnimalHealthRecord"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnimalHealthRecord"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_cattle_health_records_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Registro de Salud.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAnimalHealthRecord"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAnimalHealthRecord"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAnimalHealthRecord"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnimalHealthRecord"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_cattle_health_records_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Registro de Salud.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/cattle/stats/": {
            "get": {
                "operationId": "api_cattle_stats_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/consumer/animal/{animal_id}/history/": {
            "get": {
                "operationId": "api_consumer_animal_history_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "animal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/consumer/animal/{animal_id}/proof/": {
            "get": {
                "operationId": "api_consumer_animal_proof_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "animal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/consumer/animal/{animal_id}/qr/": {
            "get": {
                "operationId": "api_consumer_animal_qr_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "animal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/consumer/certification/{certification_id}/verify/": {
            "get": {
                "operationId": "api_consumer_certification_verify_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "certification_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/consumer/docs/": {
            "get": {
                "operationId": "api_consumer_docs_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/consumer/search/": {
            "get": {
                "operationId": "api_consumer_search_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/consumer/verify/": {
            "get": {
                "operationId": "api_consumer_verify_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/core/config/": {
            "get": {
                "operationId": "api_core_config_retrieve",
                "description": "Vista para obtener configuración del sistema",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/core/dashboard/stats/": {
            "get": {
                "operationId": "api_core_dashboard_stats_retrieve",
                "description": "Vista para estadísticas del dashboard",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/core/error-test/": {
            "get": {
                "operationId": "api_core_error_test_retrieve",
                "description": "Vista para probar manejo de errores",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/core/health/": {
            "get": {
                "operationId": "api_core_health_retrieve",
                "description": "Vista para health check del sistema",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/core/info/": {
            "get": {
                "operationId": "api_core_info_retrieve",
                "description": "Vista para información de la API",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/core/maintenance/": {
            "post": {
                "operationId": "api_core_maintenance_create",
                "description": "Vista para operaciones de mantenimiento del sistema",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/core/metrics/": {
            "get": {
                "operationId": "api_core_metrics_list",
                "description": "ViewSet para métricas del sistema",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSystemMetricsList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/core/metrics/latest/": {
            "get": {
                "operationId": "api_core_metrics_latest_retrieve",
                "description": "Obtener la métrica más reciente",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/core/metrics/summary/": {
            "get": {
                "operationId": "api_core_metrics_summary_retrieve",
                "description": "Resumen de métricas del sistema",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SystemMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/core/validate/": {
            "post": {
                "operationId": "api_core_validate_create",
                "description": "Vista para probar validaciones",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/governance/active/": {
            "get": {
                "operationId": "api_governance_active_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/governance/my-votes/": {
            "get": {
                "operationId": "api_governance_my_votes_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/governance/proposals/": {
            "get": {
                "operationId": "api_governance_proposals_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGovernanceProposalList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_governance_proposals_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProposal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProposal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateProposal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateProposal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/governance/proposals/{id}/": {
            "get": {
                "operationId": "api_governance_proposals_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este governance proposal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GovernanceProposal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_governance_proposals_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este governance proposal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GovernanceProposal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_governance_proposals_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este governance proposal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGovernanceProposal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGovernanceProposal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGovernanceProposal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GovernanceProposal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_governance_proposals_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este governance proposal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/governance/proposals/{id}/update-status/": {
            "post": {
                "operationId": "api_governance_proposals_update_status_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GovernanceProposal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/governance/proposals/{id}/update_status/": {
            "post": {
                "operationId": "api_governance_proposals_update_status_create_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este governance proposal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GovernanceProposal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/governance/proposals/{id}/vote/": {
            "post": {
                "operationId": "api_governance_proposals_vote_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este governance proposal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GovernanceProposal"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GovernanceProposal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/governance/proposals/{id}/voting-status/": {
            "get": {
                "operationId": "api_governance_proposals_voting_status_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GovernanceProposal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/governance/proposals/{id}/voting_status/": {
            "get": {
                "operationId": "api_governance_proposals_voting_status_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este governance proposal.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GovernanceProposal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/governance/stats/": {
            "get": {
                "operationId": "api_governance_stats_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/governance/stats/{proposal_id}/": {
            "get": {
                "operationId": "api_governance_stats_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "proposal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/governance/timeline/": {
            "get": {
                "operationId": "api_governance_timeline_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/governance/user-stats/": {
            "get": {
                "operationId": "api_governance_user_stats_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/governance/user-stats/{user_id}/": {
            "get": {
                "operationId": "api_governance_user_stats_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/governance/votes/": {
            "get": {
                "operationId": "api_governance_votes_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVoteList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/governance/votes/{id}/": {
            "get": {
                "operationId": "api_governance_votes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/governance/votes/my_votes/": {
            "get": {
                "operationId": "api_governance_votes_my_votes_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vote"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/advanced/bulk-management/": {
            "post": {
                "operationId": "api_iot_advanced_bulk_management_create",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/iot/advanced/firmware/{device_id}/": {
            "post": {
                "operationId": "api_iot_advanced_firmware_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "device_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/iot/advanced/network-health/": {
            "get": {
                "operationId": "api_iot_advanced_network_health_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/iot/advanced/predictive-maintenance/": {
            "get": {
                "operationId": "api_iot_advanced_predictive_maintenance_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/iot/device-analytics/": {
            "get": {
                "operationId": "api_iot_device_analytics_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeviceAnalyticsList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/device-analytics/{id}/": {
            "get": {
                "operationId": "api_iot_device_analytics_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceAnalytics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/device-analytics/summary/": {
            "get": {
                "operationId": "api_iot_device_analytics_summary_retrieve",
                "description": "Resumen de analytics",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceAnalytics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/device-configs/": {
            "get": {
                "operationId": "api_iot_device_configs_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeviceConfigurationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_iot_device_configs_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceConfiguration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceConfiguration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceConfiguration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/device-configs/{id}/": {
            "get": {
                "operationId": "api_iot_device_configs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_iot_device_configs_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceConfiguration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceConfiguration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceConfiguration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_iot_device_configs_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDeviceConfiguration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDeviceConfiguration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedDeviceConfiguration"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceConfiguration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_iot_device_configs_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/iot/device-events/": {
            "get": {
                "operationId": "api_iot_device_events_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeviceEventList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/device-events/{id}/": {
            "get": {
                "operationId": "api_iot_device_events_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/device-events/{id}/resolve/": {
            "post": {
                "operationId": "api_iot_device_events_resolve_create",
                "description": "Marcar evento como resuelto",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceEvent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceEvent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/DeviceEvent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/device-events/unresolved/": {
            "get": {
                "operationId": "api_iot_device_events_unresolved_retrieve",
                "description": "Eventos no resueltos",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/devices/": {
            "get": {
                "operationId": "api_iot_devices_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedIoTDeviceList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_iot_devices_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IoTDevice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/devices/{device_id}/alerts/": {
            "get": {
                "operationId": "api_iot_devices_alerts_retrieve",
                "description": "Obtener umbrales de alerta de un dispositivo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "device_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "post": {
                "operationId": "api_iot_devices_alerts_create",
                "description": "Actualizar umbrales de alerta para un dispositivo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "device_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/iot/devices/{id}/": {
            "get": {
                "operationId": "api_iot_devices_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IoTDevice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_iot_devices_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IoTDevice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_iot_devices_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIoTDevice"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIoTDevice"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedIoTDevice"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IoTDevice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_iot_devices_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/iot/devices/{id}/analytics/": {
            "get": {
                "operationId": "api_iot_devices_analytics_retrieve",
                "description": "Obtener analytics del dispositivo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IoTDevice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/devices/{id}/events/": {
            "get": {
                "operationId": "api_iot_devices_events_retrieve",
                "description": "Obtener eventos del dispositivo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IoTDevice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/devices/{id}/stats/": {
            "get": {
                "operationId": "api_iot_devices_stats_retrieve",
                "description": "Estadísticas del dispositivo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IoTDevice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/devices/{id}/update_configuration/": {
            "post": {
                "operationId": "api_iot_devices_update_configuration_create",
                "description": "Actualizar configuración del dispositivo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IoTDevice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/devices/{id}/update_status/": {
            "post": {
                "operationId": "api_iot_devices_update_status_create",
                "description": "Actualizar estado del dispositivo",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/IoTDevice"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IoTDevice"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/events/unresolved/": {
            "get": {
                "operationId": "api_iot_events_unresolved_retrieve",
                "description": "Eventos no resueltos",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeviceEvent"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/gps-data/": {
            "get": {
                "operationId": "api_iot_gps_data_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGPSDataList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/gps-data/{id}/": {
            "get": {
                "operationId": "api_iot_gps_data_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GPSData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/gps-data/animal_track/": {
            "get": {
                "operationId": "api_iot_gps_data_animal_track_retrieve",
                "description": "Track completo de un animal",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GPSData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/gps-data/geo_fence/": {
            "get": {
                "operationId": "api_iot_gps_data_geo_fence_retrieve",
                "description": "Datos GPS para geofencing",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GPSData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/gps-data/latest/": {
            "get": {
                "operationId": "api_iot_gps_data_latest_retrieve",
                "description": "Últimos datos GPS",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GPSData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/gps/animal/{animal_id}/track/": {
            "get": {
                "operationId": "api_iot_gps_animal_track_retrieve",
                "description": "Track completo de un animal",
                "parameters": [
                    {
                        "in": "path",
                        "name": "animal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GPSData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/health-data/": {
            "get": {
                "operationId": "api_iot_health_data_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedHealthSensorDataList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/health-data/{id}/": {
            "get": {
                "operationId": "api_iot_health_data_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthSensorData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/health-data/animal_health/": {
            "get": {
                "operationId": "api_iot_health_data_animal_health_retrieve",
                "description": "Historial de salud de un animal",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthSensorData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/health-data/health_alerts/": {
            "get": {
                "operationId": "api_iot_health_data_health_alerts_retrieve",
                "description": "Alertas de salud recientes",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthSensorData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/health-data/latest/": {
            "get": {
                "operationId": "api_iot_health_data_latest_retrieve",
                "description": "Últimos datos de salud",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthSensorData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/health/alerts/": {
            "get": {
                "operationId": "api_iot_health_alerts_retrieve",
                "description": "Alertas de salud recientes",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthSensorData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/health/animal/{animal_id}/": {
            "get": {
                "operationId": "api_iot_health_animal_retrieve",
                "description": "Historial de salud de un animal",
                "parameters": [
                    {
                        "in": "path",
                        "name": "animal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthSensorData"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/iot/ingest/": {
            "post": {
                "operationId": "api_iot_ingest_create",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/iot/ingest/bulk/": {
            "post": {
                "operationId": "api_iot_ingest_bulk_create",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/iot/register/": {
            "post": {
                "operationId": "api_iot_register_create",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/iot/stats/": {
            "get": {
                "operationId": "api_iot_stats_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/market/animal/{animal_id}/": {
            "get": {
                "operationId": "api_market_animal_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "animal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/market/execute-trade/{listing_id}/": {
            "post": {
                "operationId": "api_market_execute_trade_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "listing_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/market/listings/": {
            "get": {
                "operationId": "api_market_listings_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedMarketListingList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_market_listings_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMarketListing"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMarketListing"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMarketListing"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateMarketListing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/market/listings/{id}/": {
            "get": {
                "operationId": "api_market_listings_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este market listing.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketListing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_market_listings_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este market listing.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketListing"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketListing"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketListing"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketListing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_market_listings_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este market listing.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMarketListing"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMarketListing"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedMarketListing"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketListing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_market_listings_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este market listing.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/market/listings/{id}/cancel/": {
            "post": {
                "operationId": "api_market_listings_cancel_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketListing"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketListing"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketListing"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketListing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/market/listings/{id}/cancel_listing/": {
            "post": {
                "operationId": "api_market_listings_cancel_listing_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este market listing.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketListing"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketListing"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MarketListing"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketListing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/market/listings/my_listings/": {
            "get": {
                "operationId": "api_market_listings_my_listings_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketListing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/market/my/listings/": {
            "get": {
                "operationId": "api_market_my_listings_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MarketListing"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/market/my/trades/": {
            "get": {
                "operationId": "api_market_my_trades_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trade"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/market/price-history/": {
            "get": {
                "operationId": "api_market_price_history_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/market/price-history/{animal_id}/": {
            "get": {
                "operationId": "api_market_price_history_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "animal_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/market/stats/": {
            "get": {
                "operationId": "api_market_stats_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/market/trades/": {
            "get": {
                "operationId": "api_market_trades_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTradeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/market/trades/{id}/": {
            "get": {
                "operationId": "api_market_trades_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trade"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/market/trades/my_trades/": {
            "get": {
                "operationId": "api_market_trades_my_trades_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trade"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/reports/api/audit/summary/": {
            "get": {
                "operationId": "api_reports_api_audit_summary_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/reports/api/compliance/quick/": {
            "get": {
                "operationId": "api_reports_api_compliance_quick_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/reports/audit/": {
            "get": {
                "operationId": "api_reports_audit_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/reports/compliance/": {
            "get": {
                "operationId": "api_reports_compliance_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/reports/export/animals/": {
            "get": {
                "operationId": "api_reports_export_animals_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/reports/export/report/": {
            "get": {
                "operationId": "api_reports_export_report_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/reports/financial/": {
            "get": {
                "operationId": "api_reports_financial_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/reports/system-health/": {
            "get": {
                "operationId": "api_reports_system_health_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/rewards/claim/{reward_id}/": {
            "post": {
                "operationId": "api_rewards_claim_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "reward_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/rewards/claim/bulk/": {
            "post": {
                "operationId": "api_rewards_claim_bulk_create",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/rewards/leaderboard/": {
            "get": {
                "operationId": "api_rewards_leaderboard_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/rewards/rewards/": {
            "get": {
                "operationId": "api_rewards_rewards_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRewardDistributionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/rewards/rewards/{id}/": {
            "get": {
                "operationId": "api_rewards_rewards_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RewardDistribution"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/rewards/staking/": {
            "get": {
                "operationId": "api_rewards_staking_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedStakingPoolList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_rewards_staking_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StakingPool"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/StakingPool"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StakingPool"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StakingPool"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/rewards/staking/{id}/": {
            "get": {
                "operationId": "api_rewards_staking_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StakingPool"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_rewards_staking_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StakingPool"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/StakingPool"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StakingPool"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StakingPool"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_rewards_staking_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStakingPool"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStakingPool"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStakingPool"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StakingPool"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_rewards_staking_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/rewards/staking/action/stake/": {
            "post": {
                "operationId": "api_rewards_staking_action_stake_create",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/rewards/staking/action/unstake/{staking_pool_id}/": {
            "post": {
                "operationId": "api_rewards_staking_action_unstake_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "staking_pool_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/rewards/stats/": {
            "get": {
                "operationId": "api_rewards_stats_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/rewards/stats/{user_id}/": {
            "get": {
                "operationId": "api_rewards_stats_retrieve_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/rewards/stats/action-types/": {
            "get": {
                "operationId": "api_rewards_stats_action_types_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/rewards/stats/global/": {
            "get": {
                "operationId": "api_rewards_stats_global_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/schema/": {
            "get": {
                "operationId": "api_schema_retrieve",
                "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
                "parameters": [
                    {
                        "in": "query",
                        "name": "format",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "json",
                                "yaml"
                            ]
                        }
                    },
                    {
                        "in": "query",
                        "name": "lang",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "af",
                                "ar",
                                "ar-dz",
                                "ast",
                                "az",
                                "be",
                                "bg",
                                "bn",
                                "br",
                                "bs",
                                "ca",
                                "ckb",
                                "cs",
                                "cy",
                                "da",
                                "de",
                                "dsb",
                                "el",
                                "en",
                                "en-au",
                                "en-gb",
                                "eo",
                                "es",
                                "es-ar",
                                "es-co",
                                "es-mx",
                                "es-ni",
                                "es-ve",
                                "et",
                                "eu",
                                "fa",
                                "fi",
                                "fr",
                                "fy",
                                "ga",
                                "gd",
                                "gl",
                                "he",
                                "hi",
                                "hr",
                                "hsb",
                                "hu",
                                "hy",
                                "ia",
                                "id",
                                "ig",
                                "io",
                                "is",
                                "it",
                                "ja",
                                "ka",
                                "kab",
                                "kk",
                                "km",
                                "kn",
                                "ko",
                                "ky",
                                "lb",
                                "lt",
                                "lv",
                                "mk",
                                "ml",
                                "mn",
                                "mr",
                                "ms",
                                "my",
                                "nb",
                                "ne",
                                "nl",
                                "nn",
                                "os",
                                "pa",
                                "pl",
                                "pt",
                                "pt-br",
                                "ro",
                                "ru",
                                "sk",
                                "sl",
                                "sq",
                                "sr",
                                "sr-latn",
                                "sv",
                                "sw",
                                "ta",
                                "te",
                                "tg",
                                "th",
                                "tk",
                                "tr",
                                "tt",
                                "udm",
                                "ug",
                                "uk",
                                "ur",
                                "uz",
                                "vi",
                                "zh-hans",
                                "zh-hant"
                            ]
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/vnd.oai.openapi": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/yaml": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/vnd.oai.openapi+json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {}
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/activity-logs/": {
            "get": {
                "operationId": "api_users_activity_logs_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserActivityLogList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/activity-logs/{id}/": {
            "get": {
                "operationId": "api_users_activity_logs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserActivityLog"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/activity-logs/recent/": {
            "get": {
                "operationId": "api_users_activity_logs_recent_retrieve",
                "description": "Actividad reciente",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserActivityLog"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/api-tokens/": {
            "get": {
                "operationId": "api_users_api_tokens_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAPITokenList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_users_api_tokens_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APITokenCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/APITokenCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/APITokenCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APITokenCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/api-tokens/{id}/": {
            "get": {
                "operationId": "api_users_api_tokens_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_users_api_tokens_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APIToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/APIToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/APIToken"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_users_api_tokens_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAPIToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAPIToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAPIToken"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_users_api_tokens_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/users/api-tokens/{id}/regenerate/": {
            "post": {
                "operationId": "api_users_api_tokens_regenerate_create",
                "description": "Regenerar token API",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/APIToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/APIToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/APIToken"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/auth/login/": {
            "post": {
                "operationId": "api_users_auth_login_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/auth/password/reset/": {
            "post": {
                "operationId": "api_users_auth_password_reset_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetRequest"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PasswordResetRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/auth/password/reset/confirm/": {
            "post": {
                "operationId": "api_users_auth_password_reset_confirm_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetConfirm"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetConfirm"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetConfirm"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PasswordResetConfirm"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/auth/register/": {
            "post": {
                "operationId": "api_users_auth_register_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRegistration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/auth/token/refresh/": {
            "post": {
                "operationId": "api_users_auth_token_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/notifications/": {
            "get": {
                "operationId": "api_users_notifications_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNotificationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_users_notifications_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/notifications/{id}/": {
            "get": {
                "operationId": "api_users_notifications_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_users_notifications_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_users_notifications_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNotification"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNotification"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedNotification"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_users_notifications_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/users/notifications/{id}/mark_read/": {
            "post": {
                "operationId": "api_users_notifications_mark_read_create",
                "description": "Marcar notificación como leída",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/notifications/mark_all_read/": {
            "post": {
                "operationId": "api_users_notifications_mark_all_read_create",
                "description": "Marcar todas las notificaciones como leídas",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/notifications/unread/": {
            "get": {
                "operationId": "api_users_notifications_unread_retrieve",
                "description": "Notificaciones no leídas",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/preferences/": {
            "get": {
                "operationId": "api_users_preferences_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserPreferenceList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_users_preferences_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPreference"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPreference"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPreference"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/preferences/{id}/": {
            "get": {
                "operationId": "api_users_preferences_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_users_preferences_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPreference"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPreference"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPreference"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_users_preferences_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserPreference"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserPreference"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserPreference"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPreference"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_users_preferences_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/users/profile/": {
            "get": {
                "operationId": "api_users_profile_retrieve",
                "description": "Vista para obtener el perfil del usuario (legacy)",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_users_profile_update",
                "description": "Vista para obtener el perfil del usuario (legacy)",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/reputation-scores/": {
            "get": {
                "operationId": "api_users_reputation_scores_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedReputationScoreList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/reputation-scores/{id}/": {
            "get": {
                "operationId": "api_users_reputation_scores_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReputationScore"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/roles/assign/": {
            "post": {
                "operationId": "api_users_roles_assign_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignRole"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignRole"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignRole"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AssignRole"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/roles/check/": {
            "get": {
                "operationId": "api_users_roles_check_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/users/user-roles/": {
            "get": {
                "operationId": "api_users_user_roles_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserRoleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/user-roles/{id}/": {
            "get": {
                "operationId": "api_users_user_roles_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRole"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/": {
            "get": {
                "operationId": "api_users_users_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Qué campo usar para ordenar los resultados.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "Un número de página dentro del conjunto de resultados paginado.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "Un término de búsqueda.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_users_users_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/{id}/": {
            "get": {
                "operationId": "api_users_users_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Usuario.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_users_users_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Usuario.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_users_users_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Usuario.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_users_users_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Usuario.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/users/users/{id}/connect_wallet/": {
            "post": {
                "operationId": "api_users_users_connect_wallet_create",
                "description": "Conectar wallet a usuario",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Usuario.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/{id}/notifications/": {
            "get": {
                "operationId": "api_users_users_notifications_retrieve",
                "description": "Obtener notificaciones del usuario",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Usuario.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/{id}/reputation/": {
            "get": {
                "operationId": "api_users_users_reputation_retrieve",
                "description": "Obtener reputación del usuario",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Usuario.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/{id}/roles/": {
            "get": {
                "operationId": "api_users_users_roles_retrieve",
                "description": "Obtener roles detallados del usuario",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Usuario.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/{id}/verify_wallet/": {
            "post": {
                "operationId": "api_users_users_verify_wallet_create",
                "description": "Verificar wallet mediante firma",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Un valor de entero único que identifique este Usuario.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/change_password/": {
            "post": {
                "operationId": "api_users_users_change_password_create",
                "description": "Cambiar contraseña del usuario actual",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/me/": {
            "get": {
                "operationId": "api_users_users_me_retrieve",
                "description": "Obtener el perfil del usuario actual",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/search/": {
            "get": {
                "operationId": "api_users_users_search_retrieve",
                "description": "Búsqueda de usuarios",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/stats/": {
            "get": {
                "operationId": "api_users_users_stats_retrieve",
                "description": "Estadísticas de usuarios",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/update_profile/": {
            "put": {
                "operationId": "api_users_users_update_profile_update",
                "description": "Actualizar perfil del usuario actual",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/wallet/connect/": {
            "post": {
                "operationId": "api_users_wallet_connect_create",
                "description": "Vista para conectar wallet de blockchain",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APIToken": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer",
                        "title": "Usuario"
                    },
                    "user_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Nombre del Token",
                        "maxLength": 100
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true,
                        "maxLength": 64
                    },
                    "token_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TokenTypeEnum"
                            }
                        ],
                        "title": "Tipo de Token"
                    },
                    "token_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Activo"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Expira el"
                    },
                    "last_used": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Último Uso"
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "is_expired",
                    "name",
                    "token",
                    "token_type_display",
                    "user",
                    "user_username"
                ]
            },
            "APITokenCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Nombre del Token",
                        "maxLength": 100
                    },
                    "token_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TokenTypeEnum"
                            }
                        ],
                        "title": "Tipo de Token"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Expira el"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ActionEnum": {
                "enum": [
                    "LOGIN",
                    "LOGOUT",
                    "NFT_MINT",
                    "TOKEN_MINT",
                    "HEALTH_UPDATE",
                    "ROLE_ASSIGN",
                    "PROFILE_UPDATE",
                    "PASSWORD_CHANGE",
                    "BLOCKCHAIN_INTERACTION"
                ],
                "type": "string",
                "description": "* `LOGIN` - Inicio de Sesión\n* `LOGOUT` - Cierre de Sesión\n* `NFT_MINT` - Mint de NFT\n* `TOKEN_MINT` - Mint de Tokens\n* `HEALTH_UPDATE` - Actualización de Salud\n* `ROLE_ASSIGN` - Asignación de Rol\n* `PROFILE_UPDATE` - Actualización de Perfil\n* `PASSWORD_CHANGE` - Cambio de Contraseña\n* `BLOCKCHAIN_INTERACTION` - Interacción con Blockchain"
            },
            "Animal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "ear_tag": {
                        "type": "string",
                        "title": "Arete",
                        "maxLength": 100
                    },
                    "breed": {
                        "type": "string",
                        "title": "Raza",
                        "maxLength": 100
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Fecha de Nacimiento"
                    },
                    "weight": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,2})?$",
                        "title": "Peso (kg)"
                    },
                    "health_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HealthStatusEnum"
                            }
                        ],
                        "title": "Estado de Salud"
                    },
                    "health_status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "location": {
                        "type": "string",
                        "title": "Ubicación",
                        "maxLength": 255
                    },
                    "owner": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "Dueño"
                    },
                    "owner_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "owner_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ipfs_hash": {
                        "type": "string",
                        "title": "Hash IPFS",
                        "maxLength": 255
                    },
                    "token_id": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64",
                        "nullable": true,
                        "title": "Token ID NFT"
                    },
                    "mint_transaction_hash": {
                        "type": "string",
                        "title": "Transacción de Mint",
                        "maxLength": 66
                    },
                    "nft_owner_wallet": {
                        "type": "string",
                        "title": "Wallet Owner NFT",
                        "maxLength": 42
                    },
                    "current_batch": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Lote Actual"
                    },
                    "current_batch_name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "is_minted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "metadata_uri": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "age": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "age",
                    "birth_date",
                    "breed",
                    "created_at",
                    "current_batch_name",
                    "ear_tag",
                    "health_status_display",
                    "id",
                    "is_minted",
                    "location",
                    "metadata_uri",
                    "owner",
                    "owner_email",
                    "owner_name",
                    "polyscan_url",
                    "updated_at",
                    "weight"
                ]
            },
            "AnimalHealthRecord": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "animal": {
                        "type": "integer"
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "animal_breed": {
                        "type": "string",
                        "readOnly": true
                    },
                    "health_status": {
                        "$ref": "#/components/schemas/HealthStatusEnum"
                    },
                    "health_status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source": {
                        "$ref": "#/components/schemas/SourceEnum"
                    },
                    "source_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "veterinarian": {
                        "type": "integer",
                        "nullable": true
                    },
                    "veterinarian_name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "iot_device_id": {
                        "type": "string",
                        "title": "ID Dispositivo IoT",
                        "maxLength": 100
                    },
                    "notes": {
                        "type": "string"
                    },
                    "temperature": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Temperatura (°C)"
                    },
                    "heart_rate": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Ritmo Cardíaco (bpm)"
                    },
                    "movement_activity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Actividad de Movimiento"
                    },
                    "ipfs_hash": {
                        "type": "string",
                        "title": "Hash IPFS",
                        "maxLength": 100
                    },
                    "transaction_hash": {
                        "type": "string",
                        "title": "Hash de Transacción",
                        "maxLength": 66
                    },
                    "blockchain_hash": {
                        "type": "string",
                        "nullable": true,
                        "title": "Hash Blockchain",
                        "maxLength": 66
                    },
                    "blockchain_linked": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "animal",
                    "animal_breed",
                    "animal_ear_tag",
                    "blockchain_linked",
                    "created_at",
                    "health_status",
                    "health_status_display",
                    "id",
                    "polyscan_url",
                    "source_display",
                    "veterinarian_name"
                ]
            },
            "AnimalHistory": {
                "type": "object",
                "properties": {
                    "transaction_hash": {
                        "type": "string",
                        "maxLength": 66
                    },
                    "block_number": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "type": {
                        "type": "string"
                    },
                    "from_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "to_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "timestamp": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "gas_used": {
                        "type": "integer",
                        "nullable": true
                    },
                    "gas_price": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "block_number",
                    "from_address",
                    "timestamp",
                    "to_address",
                    "transaction_hash",
                    "type"
                ]
            },
            "AssignRole": {
                "type": "object",
                "properties": {
                    "target_wallet": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "role": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "required": [
                    "role",
                    "target_wallet"
                ]
            },
            "Batch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Nombre del Lote",
                        "maxLength": 100
                    },
                    "animals": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "title": "Animales"
                        },
                        "title": "Animales"
                    },
                    "animal_details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Animal"
                        },
                        "readOnly": true
                    },
                    "origin": {
                        "type": "string",
                        "title": "Origen",
                        "maxLength": 255
                    },
                    "destination": {
                        "type": "string",
                        "title": "Destino",
                        "maxLength": 255
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status7c0Enum"
                            }
                        ],
                        "title": "Estado"
                    },
                    "status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ipfs_hash": {
                        "type": "string",
                        "title": "Hash IPFS",
                        "maxLength": 255
                    },
                    "blockchain_tx": {
                        "type": "string",
                        "title": "Transacción Blockchain",
                        "maxLength": 66
                    },
                    "created_by": {
                        "type": "integer",
                        "title": "Creado por"
                    },
                    "created_by_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "animals_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "minted_animals_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "animal_details",
                    "animals",
                    "animals_count",
                    "created_at",
                    "created_by",
                    "created_by_name",
                    "destination",
                    "id",
                    "minted_animals_count",
                    "name",
                    "origin",
                    "polyscan_url",
                    "status_display",
                    "updated_at"
                ]
            },
            "BatchCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Nombre del Lote",
                        "maxLength": 100
                    },
                    "animals": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "origin": {
                        "type": "string",
                        "title": "Origen",
                        "maxLength": 255
                    },
                    "destination": {
                        "type": "string",
                        "title": "Destino",
                        "maxLength": 255
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status7c0Enum"
                            }
                        ],
                        "title": "Estado"
                    }
                },
                "required": [
                    "destination",
                    "name",
                    "origin"
                ]
            },
            "BlockchainBatchCreate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "animal_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "maxItems": 100,
                        "minItems": 1
                    },
                    "origin": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "destination": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "metadata_uri": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "notes": {
                        "type": "string",
                        "maxLength": 500
                    }
                },
                "required": [
                    "animal_ids",
                    "destination",
                    "name",
                    "origin"
                ]
            },
            "BlockchainEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "event_type": {
                        "$ref": "#/components/schemas/BlockchainEventEventTypeEnum"
                    },
                    "event_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "transaction_hash": {
                        "type": "string",
                        "maxLength": 66
                    },
                    "short_hash": {
                        "type": "string",
                        "readOnly": true
                    },
                    "block_number": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64"
                    },
                    "animal": {
                        "type": "integer",
                        "nullable": true
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "batch": {
                        "type": "integer",
                        "nullable": true
                    },
                    "batch_name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "from_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "to_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "metadata": {},
                    "metadata_prettified": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "animal_ear_tag",
                    "batch_name",
                    "block_number",
                    "created_at",
                    "event_type",
                    "event_type_display",
                    "id",
                    "metadata_prettified",
                    "polyscan_url",
                    "short_hash",
                    "transaction_hash"
                ]
            },
            "BlockchainEventEventTypeEnum": {
                "enum": [
                    "MINT",
                    "TRANSFER",
                    "ROLE_ADD",
                    "ROLE_REMOVE",
                    "HEALTH_UPDATE",
                    "LOCATION_UPDATE",
                    "BATCH_CREATED",
                    "TOKEN_MINTED",
                    "IOT_DATA"
                ],
                "type": "string",
                "description": "* `MINT` - NFT Minted\n* `TRANSFER` - Token Transfer\n* `ROLE_ADD` - Role Assigned\n* `ROLE_REMOVE` - Role Removed\n* `HEALTH_UPDATE` - Health Status Updated\n* `LOCATION_UPDATE` - Location Updated\n* `BATCH_CREATED` - Batch Created\n* `TOKEN_MINTED` - Tokens Minted\n* `IOT_DATA` - IoT Data Received"
            },
            "BlockchainEventState": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "event": {
                        "type": "integer"
                    },
                    "event_details": {
                        "type": "string",
                        "readOnly": true
                    },
                    "state": {
                        "$ref": "#/components/schemas/StateEnum"
                    },
                    "state_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "confirmation_blocks": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "block_confirmed": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "event",
                    "event_details",
                    "id",
                    "state_display",
                    "updated_at"
                ]
            },
            "BlockchainStats": {
                "type": "object",
                "properties": {
                    "total_events": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "total_transactions": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "successful_transactions": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "failed_transactions": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "average_gas_price": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "total_gas_used": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "last_block_number": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "active_contracts": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "pending_transactions": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "required": [
                    "active_contracts",
                    "average_gas_price",
                    "failed_transactions",
                    "last_block_number",
                    "pending_transactions",
                    "successful_transactions",
                    "total_events",
                    "total_gas_used",
                    "total_transactions"
                ]
            },
            "CattleAuditTrail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "object_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "object_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "action_type": {
                        "$ref": "#/components/schemas/CattleAuditTrailActionTypeEnum"
                    },
                    "action_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer",
                        "nullable": true
                    },
                    "user_name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "nullable": true
                    },
                    "previous_state": {
                        "nullable": true
                    },
                    "new_state": {
                        "nullable": true
                    },
                    "changes": {},
                    "ip_address": {
                        "type": "string",
                        "nullable": true
                    },
                    "blockchain_tx_hash": {
                        "type": "string",
                        "maxLength": 66
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "action_type",
                    "action_type_display",
                    "changes",
                    "id",
                    "object_id",
                    "object_type",
                    "timestamp",
                    "user_email",
                    "user_name"
                ]
            },
            "CattleAuditTrailActionTypeEnum": {
                "enum": [
                    "CREATE",
                    "UPDATE",
                    "DELETE",
                    "TRANSFER",
                    "STATUS_CHANGE",
                    "HEALTH_UPDATE"
                ],
                "type": "string",
                "description": "* `CREATE` - Creación\n* `UPDATE` - Actualización\n* `DELETE` - Eliminación\n* `TRANSFER` - Transferencia\n* `STATUS_CHANGE` - Cambio de Estado\n* `HEALTH_UPDATE` - Actualización de Salud"
            },
            "ContractCall": {
                "type": "object",
                "properties": {
                    "contract_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "function_name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "parameters": {},
                    "value": {
                        "type": "integer",
                        "minimum": 0,
                        "default": 0
                    },
                    "gas_limit": {
                        "type": "integer",
                        "maximum": 1000000,
                        "minimum": 21000,
                        "nullable": true
                    }
                },
                "required": [
                    "contract_address",
                    "function_name"
                ]
            },
            "ContractInteraction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "contract_type": {
                        "$ref": "#/components/schemas/ContractInteractionContractTypeEnum"
                    },
                    "contract_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "action_type": {
                        "$ref": "#/components/schemas/ContractInteractionActionTypeEnum"
                    },
                    "action_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "transaction_hash": {
                        "type": "string",
                        "maxLength": 66
                    },
                    "short_hash": {
                        "type": "string",
                        "readOnly": true
                    },
                    "block_number": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64"
                    },
                    "caller_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "target_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "parameters": {},
                    "parameters_prettified": {
                        "type": "string",
                        "readOnly": true
                    },
                    "gas_used": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64",
                        "nullable": true
                    },
                    "gas_price": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64",
                        "nullable": true
                    },
                    "gas_cost_eth": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "gas_cost_usd": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/ContractInteractionStatusEnum"
                    },
                    "status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "error_message": {
                        "type": "string"
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "action_type",
                    "action_type_display",
                    "block_number",
                    "caller_address",
                    "contract_type",
                    "contract_type_display",
                    "created_at",
                    "gas_cost_eth",
                    "gas_cost_usd",
                    "id",
                    "parameters_prettified",
                    "polyscan_url",
                    "short_hash",
                    "status_display",
                    "transaction_hash",
                    "updated_at"
                ]
            },
            "ContractInteractionActionTypeEnum": {
                "enum": [
                    "MINT",
                    "TRANSFER",
                    "BURN",
                    "UPDATE",
                    "ROLE_GRANT",
                    "ROLE_REVOKE",
                    "APPROVE",
                    "BATCH_MINT",
                    "HEALTH_UPDATE"
                ],
                "type": "string",
                "description": "* `MINT` - Mint\n* `TRANSFER` - Transfer\n* `BURN` - Burn\n* `UPDATE` - Update\n* `ROLE_GRANT` - Grant Role\n* `ROLE_REVOKE` - Revoke Role\n* `APPROVE` - Approve\n* `BATCH_MINT` - Batch Mint\n* `HEALTH_UPDATE` - Update Health"
            },
            "ContractInteractionContractTypeEnum": {
                "enum": [
                    "NFT",
                    "TOKEN",
                    "REGISTRY",
                    "IOT"
                ],
                "type": "string",
                "description": "* `NFT` - Animal NFT\n* `TOKEN` - Ganado Token\n* `REGISTRY` - Registry\n* `IOT` - IoT Manager"
            },
            "ContractInteractionStatusEnum": {
                "enum": [
                    "SUCCESS",
                    "FAILED",
                    "PENDING"
                ],
                "type": "string",
                "description": "* `SUCCESS` - Success\n* `FAILED` - Failed\n* `PENDING` - Pending"
            },
            "CreateMarketListing": {
                "type": "object",
                "properties": {
                    "animal": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "animal",
                    "expiration_date",
                    "price"
                ]
            },
            "CreateProposal": {
                "type": "object",
                "description": "Serializer para crear nuevas propuestas de gobernanza",
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "proposal_type": {
                        "$ref": "#/components/schemas/ProposalTypeEnum"
                    },
                    "voting_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "voting_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "parameters": {
                        "nullable": true
                    }
                },
                "required": [
                    "description",
                    "proposal_type",
                    "title",
                    "voting_end",
                    "voting_start"
                ]
            },
            "DeviceAnalytics": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "device": {
                        "type": "integer"
                    },
                    "device_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "device_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "total_readings": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "avg_battery_level": {
                        "type": "number",
                        "format": "double"
                    },
                    "connectivity_uptime": {
                        "type": "number",
                        "format": "double"
                    },
                    "data_quality_score": {
                        "type": "number",
                        "format": "double"
                    },
                    "alerts_triggered": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "date",
                    "device",
                    "device_id",
                    "device_name",
                    "id"
                ]
            },
            "DeviceConfiguration": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "device": {
                        "type": "integer",
                        "title": "Dispositivo"
                    },
                    "device_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "device_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "sampling_interval": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Intervalo de Muestreo (s)"
                    },
                    "data_retention": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Retención de Datos (días)"
                    },
                    "alert_thresholds": {
                        "title": "Umbrales de Alerta"
                    },
                    "gps_enabled": {
                        "type": "boolean",
                        "title": "GPS Habilitado"
                    },
                    "health_monitoring": {
                        "type": "boolean",
                        "title": "Monitoreo de Salud"
                    },
                    "low_power_mode": {
                        "type": "boolean",
                        "title": "Modo Bajo Consumo"
                    },
                    "firmware_auto_update": {
                        "type": "boolean",
                        "title": "Actualización Automática"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Creado el"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Actualizado el"
                    }
                },
                "required": [
                    "created_at",
                    "device",
                    "device_id",
                    "device_name",
                    "id",
                    "updated_at"
                ]
            },
            "DeviceEvent": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "device": {
                        "type": "integer",
                        "title": "Dispositivo"
                    },
                    "device_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "event_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DeviceEventEventTypeEnum"
                            }
                        ],
                        "title": "Tipo de Evento"
                    },
                    "event_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "severity": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SeverityEnum"
                            }
                        ],
                        "title": "Severidad"
                    },
                    "severity_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "message": {
                        "type": "string",
                        "title": "Mensaje"
                    },
                    "data": {
                        "title": "Datos Adicionales"
                    },
                    "data_prettified": {
                        "type": "string",
                        "readOnly": true
                    },
                    "resolved": {
                        "type": "boolean",
                        "title": "Resuelto"
                    },
                    "resolved_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Resuelto el"
                    },
                    "resolved_by": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Resuelto por"
                    },
                    "resolved_by_name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp del Evento"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Creado el"
                    }
                },
                "required": [
                    "created_at",
                    "data_prettified",
                    "device",
                    "device_id",
                    "event_type",
                    "event_type_display",
                    "id",
                    "message",
                    "resolved_by_name",
                    "severity_display",
                    "timestamp"
                ]
            },
            "DeviceEventEventTypeEnum": {
                "enum": [
                    "CONNECT",
                    "DISCONNECT",
                    "LOW_BATTERY",
                    "MAINTENANCE",
                    "ERROR",
                    "FIRMWARE_UPDATE",
                    "LOCATION_UPDATE",
                    "HEALTH_ALERT"
                ],
                "type": "string",
                "description": "* `CONNECT` - Conexión\n* `DISCONNECT` - Desconexión\n* `LOW_BATTERY` - Batería Baja\n* `MAINTENANCE` - Mantenimiento\n* `ERROR` - Error\n* `FIRMWARE_UPDATE` - Actualización de Firmware\n* `LOCATION_UPDATE` - Actualización de Ubicación\n* `HEALTH_ALERT` - Alerta de Salud"
            },
            "DeviceTypeEnum": {
                "enum": [
                    "TEMPERATURE",
                    "HEART_RATE",
                    "MOVEMENT",
                    "GPS",
                    "MULTI",
                    "CARAVANA",
                    "GATEWAY"
                ],
                "type": "string",
                "description": "* `TEMPERATURE` - Sensor de Temperatura\n* `HEART_RATE` - Sensor de Ritmo Cardíaco\n* `MOVEMENT` - Sensor de Movimiento\n* `GPS` - Sensor de Ubicación\n* `MULTI` - Sensor Multifunción\n* `CARAVANA` - Caravana Inteligente\n* `GATEWAY` - Gateway IoT"
            },
            "EventSubscription": {
                "type": "object",
                "properties": {
                    "event_name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "contract_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "from_block": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "to_block": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "filters": {}
                },
                "required": [
                    "contract_address",
                    "event_name"
                ]
            },
            "GPSData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "device": {
                        "type": "integer",
                        "title": "Dispositivo"
                    },
                    "device_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "animal": {
                        "type": "integer"
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "latitude": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,6})?$",
                        "title": "Latitud"
                    },
                    "longitude": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,6})?$",
                        "title": "Longitud"
                    },
                    "altitude": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Altitud (m)"
                    },
                    "accuracy": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Precisión (m)"
                    },
                    "speed": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Velocidad (km/h)"
                    },
                    "heading": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Rumbo (°)"
                    },
                    "satellites": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Satélites"
                    },
                    "hdop": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,2}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp del Dispositivo"
                    },
                    "recorded_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Registrado el"
                    },
                    "blockchain_hash": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Hash Blockchain"
                    },
                    "google_maps_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_accurate": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "animal",
                    "animal_ear_tag",
                    "blockchain_hash",
                    "device",
                    "device_id",
                    "google_maps_url",
                    "id",
                    "is_accurate",
                    "latitude",
                    "longitude",
                    "recorded_at",
                    "timestamp"
                ]
            },
            "GasPrice": {
                "type": "object",
                "properties": {
                    "standard": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "fast": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "instant": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "base_fee": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "required": [
                    "base_fee",
                    "fast",
                    "instant",
                    "standard"
                ]
            },
            "GasPriceHistory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "gas_price": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64"
                    },
                    "gas_price_gwei": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "block_number": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "block_number",
                    "gas_price",
                    "gas_price_gwei",
                    "id",
                    "timestamp"
                ]
            },
            "GovernanceProposal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "proposal_type": {
                        "$ref": "#/components/schemas/ProposalTypeEnum"
                    },
                    "proposal_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "proposed_by": {
                        "type": "integer"
                    },
                    "proposed_by_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "proposed_by_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "voting_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "voting_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "parameters": {
                        "nullable": true
                    },
                    "parameters_prettified": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "blockchain_proposal_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "voting_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_votes": {
                        "type": "string",
                        "readOnly": true
                    },
                    "yes_votes": {
                        "type": "string",
                        "readOnly": true
                    },
                    "no_votes": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "description",
                    "id",
                    "no_votes",
                    "parameters_prettified",
                    "proposal_type",
                    "proposal_type_display",
                    "proposed_by",
                    "proposed_by_email",
                    "proposed_by_name",
                    "status_display",
                    "title",
                    "total_votes",
                    "voting_end",
                    "voting_start",
                    "voting_status",
                    "yes_votes"
                ]
            },
            "HealthSensorData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "device": {
                        "type": "integer",
                        "title": "Dispositivo"
                    },
                    "device_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "animal": {
                        "type": "integer"
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "heart_rate": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Ritmo Cardíaco (BPM)"
                    },
                    "temperature": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Temperatura (°C)"
                    },
                    "movement_activity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Actividad de Movimiento"
                    },
                    "rumination_time": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Tiempo de Rumia (min)"
                    },
                    "feeding_activity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Actividad de Alimentación"
                    },
                    "respiratory_rate": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Ritmo Respiratorio"
                    },
                    "posture": {
                        "type": "string",
                        "title": "Postura",
                        "maxLength": 50
                    },
                    "ambient_temperature": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Temperatura Ambiental (°C)"
                    },
                    "humidity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Humedad (%)"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp del Dispositivo"
                    },
                    "recorded_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Registrado el"
                    },
                    "blockchain_hash": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Hash Blockchain"
                    },
                    "processed": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Procesado"
                    },
                    "health_alert": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Alerta de Salud"
                    },
                    "has_anomalies": {
                        "type": "array",
                        "items": {},
                        "readOnly": true
                    },
                    "health_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "health_status_display": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "animal",
                    "animal_ear_tag",
                    "blockchain_hash",
                    "device",
                    "device_id",
                    "has_anomalies",
                    "health_alert",
                    "health_status",
                    "health_status_display",
                    "id",
                    "processed",
                    "recorded_at",
                    "timestamp"
                ]
            },
            "HealthStatusEnum": {
                "enum": [
                    "HEALTHY",
                    "SICK",
                    "RECOVERING",
                    "UNDER_OBSERVATION",
                    "QUARANTINED"
                ],
                "type": "string",
                "description": "* `HEALTHY` - Sano\n* `SICK` - Enfermo\n* `RECOVERING` - Recuperándose\n* `UNDER_OBSERVATION` - En Observación\n* `QUARANTINED` - En Cuarentena"
            },
            "IoTDevice": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "device_id": {
                        "type": "string",
                        "title": "ID del Dispositivo",
                        "maxLength": 100
                    },
                    "device_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DeviceTypeEnum"
                            }
                        ],
                        "title": "Tipo de Dispositivo"
                    },
                    "device_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Nombre del Dispositivo",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string",
                        "title": "Descripción"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IoTDeviceStatusEnum"
                            }
                        ],
                        "title": "Estado"
                    },
                    "status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "animal": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Animal Asociado"
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "animal_breed": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "owner": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "Propietario"
                    },
                    "owner_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owner_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "firmware_version": {
                        "type": "string",
                        "title": "Versión de Firmware",
                        "maxLength": 50
                    },
                    "battery_level": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Nivel de Batería (%)"
                    },
                    "battery_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "last_reading": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Última Lectura"
                    },
                    "last_reading_ago": {
                        "type": "string",
                        "readOnly": true
                    },
                    "location": {
                        "type": "string",
                        "title": "Ubicación",
                        "maxLength": 255
                    },
                    "ip_address": {
                        "type": "string",
                        "nullable": true,
                        "title": "Dirección IP"
                    },
                    "mac_address": {
                        "type": "string",
                        "title": "Dirección MAC",
                        "maxLength": 17
                    },
                    "auth_token": {
                        "type": "string",
                        "readOnly": true,
                        "title": "Token de Autenticación",
                        "description": "Token para autenticación API de dispositivos"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Fecha de Creación"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Última Actualización"
                    }
                },
                "required": [
                    "animal_breed",
                    "animal_ear_tag",
                    "auth_token",
                    "battery_status",
                    "created_at",
                    "device_id",
                    "device_type",
                    "device_type_display",
                    "id",
                    "is_active",
                    "last_reading_ago",
                    "name",
                    "owner",
                    "owner_email",
                    "owner_name",
                    "status_display",
                    "updated_at"
                ]
            },
            "IoTDeviceStatusEnum": {
                "enum": [
                    "ACTIVE",
                    "INACTIVE",
                    "MAINTENANCE",
                    "DISCONNECTED",
                    "LOW_BATTERY"
                ],
                "type": "string",
                "description": "* `ACTIVE` - Activo\n* `INACTIVE` - Inactivo\n* `MAINTENANCE` - En Mantenimiento\n* `DISCONNECTED` - Desconectado\n* `LOW_BATTERY` - Batería Baja"
            },
            "IoTHealthData": {
                "type": "object",
                "properties": {
                    "device_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "heart_rate": {
                        "type": "integer",
                        "maximum": 200,
                        "minimum": 30,
                        "nullable": true
                    },
                    "temperature": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "movement_activity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "rumination_time": {
                        "type": "integer",
                        "maximum": 1440,
                        "minimum": 0,
                        "nullable": true
                    },
                    "feeding_activity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location_lat": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,6})?$",
                        "nullable": true
                    },
                    "location_lng": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,6})?$",
                        "nullable": true
                    }
                },
                "required": [
                    "animal_ear_tag",
                    "device_id",
                    "timestamp"
                ]
            },
            "LanguageEnum": {
                "enum": [
                    "es",
                    "en"
                ],
                "type": "string",
                "description": "* `es` - Español\n* `en` - English"
            },
            "MarketListing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "animal": {
                        "type": "integer"
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "animal_breed": {
                        "type": "string",
                        "readOnly": true
                    },
                    "animal_health_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "seller": {
                        "type": "integer"
                    },
                    "seller_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "seller_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "listing_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "blockchain_listing_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "is_expired": {
                        "type": "string",
                        "readOnly": true
                    },
                    "days_until_expiration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "animal",
                    "animal_breed",
                    "animal_ear_tag",
                    "animal_health_status",
                    "days_until_expiration",
                    "expiration_date",
                    "id",
                    "is_expired",
                    "listing_date",
                    "polyscan_url",
                    "price",
                    "seller",
                    "seller_email",
                    "seller_name"
                ]
            },
            "MintNFT": {
                "type": "object",
                "properties": {
                    "animal_id": {
                        "type": "integer"
                    },
                    "owner_wallet": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "metadata_uri": {
                        "type": "string"
                    },
                    "operational_ipfs": {
                        "type": "string"
                    }
                },
                "required": [
                    "animal_id",
                    "metadata_uri",
                    "owner_wallet"
                ]
            },
            "MintTokens": {
                "type": "object",
                "properties": {
                    "to_wallet": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "amount": {
                        "type": "string"
                    }
                },
                "required": [
                    "amount",
                    "to_wallet"
                ]
            },
            "NetworkState": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "last_block_number": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64"
                    },
                    "last_sync_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "average_gas_price": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64"
                    },
                    "average_gas_price_gwei": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "active_nodes": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "chain_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "sync_enabled": {
                        "type": "boolean"
                    },
                    "sync_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "last_sync_ago": {
                        "type": "string",
                        "readOnly": true
                    },
                    "network_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "network_name_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "rpc_url": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "block_time": {
                        "type": "number",
                        "format": "double"
                    },
                    "native_currency": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "is_testnet": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "average_gas_price_gwei",
                    "created_at",
                    "id",
                    "last_sync_ago",
                    "last_sync_time",
                    "network_name_display",
                    "sync_status"
                ]
            },
            "NetworkStatus": {
                "type": "object",
                "properties": {
                    "chain_id": {
                        "type": "integer"
                    },
                    "block_number": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "gas_price": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "is_syncing": {
                        "type": "boolean"
                    },
                    "peer_count": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "last_update": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "block_number",
                    "chain_id",
                    "gas_price",
                    "is_syncing",
                    "last_update",
                    "peer_count"
                ]
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer"
                    },
                    "user_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "notification_type": {
                        "$ref": "#/components/schemas/NotificationTypeEnum"
                    },
                    "notification_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "message": {
                        "type": "string"
                    },
                    "related_object_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "related_content_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "is_read": {
                        "type": "boolean"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "priority_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "message",
                    "notification_type",
                    "notification_type_display",
                    "priority_display",
                    "title",
                    "user",
                    "user_username"
                ]
            },
            "NotificationTypeEnum": {
                "enum": [
                    "HEALTH_ALERT",
                    "BLOCKCHAIN_TX",
                    "IOT_ALERT",
                    "BATCH_UPDATE",
                    "ROLE_CHANGE",
                    "REPUTATION_UPDATE"
                ],
                "type": "string",
                "description": "* `HEALTH_ALERT` - Alerta de Salud\n* `BLOCKCHAIN_TX` - Transacción Blockchain\n* `IOT_ALERT` - Alerta IoT\n* `BATCH_UPDATE` - Actualización de Lote\n* `ROLE_CHANGE` - Cambio de Rol\n* `REPUTATION_UPDATE` - Actualización de Reputación"
            },
            "PaginatedAPITokenList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/APIToken"
                        }
                    }
                }
            },
            "PaginatedAnimalHealthRecordList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AnimalHealthRecord"
                        }
                    }
                }
            },
            "PaginatedAnimalList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Animal"
                        }
                    }
                }
            },
            "PaginatedBatchList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Batch"
                        }
                    }
                }
            },
            "PaginatedBlockchainEventList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockchainEvent"
                        }
                    }
                }
            },
            "PaginatedBlockchainEventStateList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockchainEventState"
                        }
                    }
                }
            },
            "PaginatedCattleAuditTrailList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CattleAuditTrail"
                        }
                    }
                }
            },
            "PaginatedContractInteractionList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContractInteraction"
                        }
                    }
                }
            },
            "PaginatedDeviceAnalyticsList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceAnalytics"
                        }
                    }
                }
            },
            "PaginatedDeviceConfigurationList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceConfiguration"
                        }
                    }
                }
            },
            "PaginatedDeviceEventList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeviceEvent"
                        }
                    }
                }
            },
            "PaginatedGPSDataList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GPSData"
                        }
                    }
                }
            },
            "PaginatedGasPriceHistoryList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GasPriceHistory"
                        }
                    }
                }
            },
            "PaginatedGovernanceProposalList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GovernanceProposal"
                        }
                    }
                }
            },
            "PaginatedHealthSensorDataList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HealthSensorData"
                        }
                    }
                }
            },
            "PaginatedIoTDeviceList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IoTDevice"
                        }
                    }
                }
            },
            "PaginatedMarketListingList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MarketListing"
                        }
                    }
                }
            },
            "PaginatedNetworkStateList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkState"
                        }
                    }
                }
            },
            "PaginatedNotificationList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Notification"
                        }
                    }
                }
            },
            "PaginatedReputationScoreList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReputationScore"
                        }
                    }
                }
            },
            "PaginatedRewardDistributionList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RewardDistribution"
                        }
                    }
                }
            },
            "PaginatedSmartContractList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SmartContract"
                        }
                    }
                }
            },
            "PaginatedStakingPoolList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StakingPool"
                        }
                    }
                }
            },
            "PaginatedSystemMetricsList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SystemMetrics"
                        }
                    }
                }
            },
            "PaginatedTradeList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Trade"
                        }
                    }
                }
            },
            "PaginatedTransactionPoolList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TransactionPool"
                        }
                    }
                }
            },
            "PaginatedUserActivityLogList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserActivityLog"
                        }
                    }
                }
            },
            "PaginatedUserListList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserList"
                        }
                    }
                }
            },
            "PaginatedUserPreferenceList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserPreference"
                        }
                    }
                }
            },
            "PaginatedUserRoleList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserRole"
                        }
                    }
                }
            },
            "PaginatedVoteList": {
                "type": "object",
                "required": [
                    "count",
                    "results"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Vote"
                        }
                    }
                }
            },
            "PasswordResetConfirm": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "new_password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "new_password2": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "new_password",
                    "new_password2",
                    "token"
                ]
            },
            "PasswordResetRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "PatchedAPIToken": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer",
                        "title": "Usuario"
                    },
                    "user_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Nombre del Token",
                        "maxLength": 100
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true,
                        "maxLength": 64
                    },
                    "token_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TokenTypeEnum"
                            }
                        ],
                        "title": "Tipo de Token"
                    },
                    "token_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Activo"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Expira el"
                    },
                    "last_used": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Último Uso"
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedAnimal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "ear_tag": {
                        "type": "string",
                        "title": "Arete",
                        "maxLength": 100
                    },
                    "breed": {
                        "type": "string",
                        "title": "Raza",
                        "maxLength": 100
                    },
                    "birth_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Fecha de Nacimiento"
                    },
                    "weight": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,4}(?:\\.\\d{0,2})?$",
                        "title": "Peso (kg)"
                    },
                    "health_status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HealthStatusEnum"
                            }
                        ],
                        "title": "Estado de Salud"
                    },
                    "health_status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "location": {
                        "type": "string",
                        "title": "Ubicación",
                        "maxLength": 255
                    },
                    "owner": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "Dueño"
                    },
                    "owner_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "owner_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ipfs_hash": {
                        "type": "string",
                        "title": "Hash IPFS",
                        "maxLength": 255
                    },
                    "token_id": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64",
                        "nullable": true,
                        "title": "Token ID NFT"
                    },
                    "mint_transaction_hash": {
                        "type": "string",
                        "title": "Transacción de Mint",
                        "maxLength": 66
                    },
                    "nft_owner_wallet": {
                        "type": "string",
                        "title": "Wallet Owner NFT",
                        "maxLength": 42
                    },
                    "current_batch": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Lote Actual"
                    },
                    "current_batch_name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "is_minted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "metadata_uri": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "age": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedAnimalHealthRecord": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "animal": {
                        "type": "integer"
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "animal_breed": {
                        "type": "string",
                        "readOnly": true
                    },
                    "health_status": {
                        "$ref": "#/components/schemas/HealthStatusEnum"
                    },
                    "health_status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "source": {
                        "$ref": "#/components/schemas/SourceEnum"
                    },
                    "source_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "veterinarian": {
                        "type": "integer",
                        "nullable": true
                    },
                    "veterinarian_name": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "iot_device_id": {
                        "type": "string",
                        "title": "ID Dispositivo IoT",
                        "maxLength": 100
                    },
                    "notes": {
                        "type": "string"
                    },
                    "temperature": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Temperatura (°C)"
                    },
                    "heart_rate": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Ritmo Cardíaco (bpm)"
                    },
                    "movement_activity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true,
                        "title": "Actividad de Movimiento"
                    },
                    "ipfs_hash": {
                        "type": "string",
                        "title": "Hash IPFS",
                        "maxLength": 100
                    },
                    "transaction_hash": {
                        "type": "string",
                        "title": "Hash de Transacción",
                        "maxLength": 66
                    },
                    "blockchain_hash": {
                        "type": "string",
                        "nullable": true,
                        "title": "Hash Blockchain",
                        "maxLength": 66
                    },
                    "blockchain_linked": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedBatch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Nombre del Lote",
                        "maxLength": 100
                    },
                    "animals": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "title": "Animales"
                        },
                        "title": "Animales"
                    },
                    "animal_details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Animal"
                        },
                        "readOnly": true
                    },
                    "origin": {
                        "type": "string",
                        "title": "Origen",
                        "maxLength": 255
                    },
                    "destination": {
                        "type": "string",
                        "title": "Destino",
                        "maxLength": 255
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status7c0Enum"
                            }
                        ],
                        "title": "Estado"
                    },
                    "status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ipfs_hash": {
                        "type": "string",
                        "title": "Hash IPFS",
                        "maxLength": 255
                    },
                    "blockchain_tx": {
                        "type": "string",
                        "title": "Transacción Blockchain",
                        "maxLength": 66
                    },
                    "created_by": {
                        "type": "integer",
                        "title": "Creado por"
                    },
                    "created_by_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "animals_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "minted_animals_count": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedDeviceConfiguration": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "device": {
                        "type": "integer",
                        "title": "Dispositivo"
                    },
                    "device_id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "device_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "sampling_interval": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Intervalo de Muestreo (s)"
                    },
                    "data_retention": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Retención de Datos (días)"
                    },
                    "alert_thresholds": {
                        "title": "Umbrales de Alerta"
                    },
                    "gps_enabled": {
                        "type": "boolean",
                        "title": "GPS Habilitado"
                    },
                    "health_monitoring": {
                        "type": "boolean",
                        "title": "Monitoreo de Salud"
                    },
                    "low_power_mode": {
                        "type": "boolean",
                        "title": "Modo Bajo Consumo"
                    },
                    "firmware_auto_update": {
                        "type": "boolean",
                        "title": "Actualización Automática"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Creado el"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Actualizado el"
                    }
                }
            },
            "PatchedGovernanceProposal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "proposal_type": {
                        "$ref": "#/components/schemas/ProposalTypeEnum"
                    },
                    "proposal_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "proposed_by": {
                        "type": "integer"
                    },
                    "proposed_by_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "proposed_by_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "voting_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "voting_end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "parameters": {
                        "nullable": true
                    },
                    "parameters_prettified": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "blockchain_proposal_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "voting_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total_votes": {
                        "type": "string",
                        "readOnly": true
                    },
                    "yes_votes": {
                        "type": "string",
                        "readOnly": true
                    },
                    "no_votes": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PatchedIoTDevice": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "device_id": {
                        "type": "string",
                        "title": "ID del Dispositivo",
                        "maxLength": 100
                    },
                    "device_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DeviceTypeEnum"
                            }
                        ],
                        "title": "Tipo de Dispositivo"
                    },
                    "device_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "title": "Nombre del Dispositivo",
                        "maxLength": 100
                    },
                    "description": {
                        "type": "string",
                        "title": "Descripción"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IoTDeviceStatusEnum"
                            }
                        ],
                        "title": "Estado"
                    },
                    "status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "animal": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Animal Asociado"
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "animal_breed": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "owner": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "Propietario"
                    },
                    "owner_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "owner_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "firmware_version": {
                        "type": "string",
                        "title": "Versión de Firmware",
                        "maxLength": 50
                    },
                    "battery_level": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true,
                        "title": "Nivel de Batería (%)"
                    },
                    "battery_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "last_reading": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "title": "Última Lectura"
                    },
                    "last_reading_ago": {
                        "type": "string",
                        "readOnly": true
                    },
                    "location": {
                        "type": "string",
                        "title": "Ubicación",
                        "maxLength": 255
                    },
                    "ip_address": {
                        "type": "string",
                        "nullable": true,
                        "title": "Dirección IP"
                    },
                    "mac_address": {
                        "type": "string",
                        "title": "Dirección MAC",
                        "maxLength": 17
                    },
                    "auth_token": {
                        "type": "string",
                        "readOnly": true,
                        "title": "Token de Autenticación",
                        "description": "Token para autenticación API de dispositivos"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Fecha de Creación"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Última Actualización"
                    }
                }
            },
            "PatchedMarketListing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "animal": {
                        "type": "integer"
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "animal_breed": {
                        "type": "string",
                        "readOnly": true
                    },
                    "animal_health_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "seller": {
                        "type": "integer"
                    },
                    "seller_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "seller_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "currency": {
                        "type": "string",
                        "maxLength": 10
                    },
                    "listing_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "blockchain_listing_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "is_expired": {
                        "type": "string",
                        "readOnly": true
                    },
                    "days_until_expiration": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PatchedNotification": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer"
                    },
                    "user_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "notification_type": {
                        "$ref": "#/components/schemas/NotificationTypeEnum"
                    },
                    "notification_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "message": {
                        "type": "string"
                    },
                    "related_object_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "related_content_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "is_read": {
                        "type": "boolean"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "priority_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedStakingPool": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer"
                    },
                    "user_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "user_wallet": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tokens_staked": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "staking_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "staking_duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "apy": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$"
                    },
                    "rewards_earned": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "blockchain_staking_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "staking_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "days_remaining": {
                        "type": "string",
                        "readOnly": true
                    },
                    "estimated_rewards": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PatchedUserPreference": {
                "type": "object",
                "properties": {
                    "email_notifications": {
                        "type": "boolean",
                        "title": "Notificaciones por Email"
                    },
                    "push_notifications": {
                        "type": "boolean",
                        "title": "Notificaciones Push"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "title": "Idioma"
                    },
                    "theme": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ThemeEnum"
                            }
                        ],
                        "title": "Tema"
                    },
                    "animals_per_page": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Animales por Página"
                    },
                    "enable_animations": {
                        "type": "boolean",
                        "title": "Habilitar Animaciones"
                    }
                }
            },
            "PatchedUserUpdate": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "title": "Nombre",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Apellidos",
                        "maxLength": 150
                    },
                    "profile_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Imagen de Perfil"
                    },
                    "phone_number": {
                        "type": "string",
                        "title": "Teléfono",
                        "maxLength": 20
                    },
                    "company": {
                        "type": "string",
                        "title": "Empresa/Organización",
                        "maxLength": 100
                    },
                    "location": {
                        "type": "string",
                        "title": "Ubicación",
                        "maxLength": 200
                    },
                    "bio": {
                        "type": "string",
                        "title": "Biografía"
                    },
                    "website": {
                        "type": "string",
                        "format": "uri",
                        "title": "Sitio Web",
                        "maxLength": 200
                    },
                    "twitter_handle": {
                        "type": "string",
                        "title": "Twitter",
                        "maxLength": 50
                    },
                    "discord_handle": {
                        "type": "string",
                        "title": "Discord",
                        "maxLength": 50
                    }
                }
            },
            "PriorityEnum": {
                "enum": [
                    "LOW",
                    "MEDIUM",
                    "HIGH",
                    "URGENT"
                ],
                "type": "string",
                "description": "* `LOW` - Baja\n* `MEDIUM` - Media\n* `HIGH` - Alta\n* `URGENT` - Urgente"
            },
            "ProposalTypeEnum": {
                "enum": [
                    "PARAMETER_CHANGE",
                    "UPGRADE",
                    "GRANT",
                    "POLICY"
                ],
                "type": "string",
                "description": "* `PARAMETER_CHANGE` - Cambio de Parámetro\n* `UPGRADE` - Actualización de Contrato\n* `GRANT` - Concesión de Fondos\n* `POLICY` - Cambio de Política"
            },
            "ReputationScore": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer"
                    },
                    "user_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "reputation_type": {
                        "$ref": "#/components/schemas/ReputationTypeEnum"
                    },
                    "reputation_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "score": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$"
                    },
                    "total_actions": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "positive_actions": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "last_calculated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "metrics": {}
                },
                "required": [
                    "id",
                    "last_calculated",
                    "reputation_type",
                    "reputation_type_display",
                    "user",
                    "user_username"
                ]
            },
            "ReputationTypeEnum": {
                "enum": [
                    "PRODUCER",
                    "VET",
                    "FRIGORIFICO",
                    "AUDITOR"
                ],
                "type": "string",
                "description": "* `PRODUCER` - Productor\n* `VET` - Veterinario\n* `FRIGORIFICO` - Frigorífico\n* `AUDITOR` - Auditor"
            },
            "RewardDistribution": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer"
                    },
                    "user_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "user_wallet": {
                        "type": "string",
                        "readOnly": true
                    },
                    "action_type": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "action_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "action_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "tokens_awarded": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "distribution_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "transaction_hash": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "is_claimed": {
                        "type": "boolean"
                    },
                    "is_claimed_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "action_id",
                    "action_type",
                    "action_type_display",
                    "distribution_date",
                    "id",
                    "is_claimed_display",
                    "polyscan_url",
                    "tokens_awarded",
                    "transaction_hash",
                    "user",
                    "user_email",
                    "user_name",
                    "user_wallet"
                ]
            },
            "RoleEnum": {
                "enum": [
                    "PRODUCER",
                    "VET",
                    "FRIGORIFICO",
                    "AUDITOR",
                    "IOT",
                    "ADMIN",
                    "DAO",
                    "CONSUMER",
                    "VIEWER"
                ],
                "type": "string",
                "description": "* `PRODUCER` - Productor\n* `VET` - Veterinario\n* `FRIGORIFICO` - Frigorífico\n* `AUDITOR` - Auditor\n* `IOT` - Dispositivo IoT\n* `ADMIN` - Administrador\n* `DAO` - Miembro DAO\n* `CONSUMER` - Consumidor\n* `VIEWER` - Solo Lectura"
            },
            "ScopeTypeEnum": {
                "enum": [
                    "GLOBAL",
                    "BATCH",
                    "ANIMAL",
                    "LOCATION"
                ],
                "type": "string",
                "description": "* `GLOBAL` - Global\n* `BATCH` - Por Lote\n* `ANIMAL` - Por Animal\n* `LOCATION` - Por Ubicación"
            },
            "SeverityEnum": {
                "enum": [
                    "LOW",
                    "MEDIUM",
                    "HIGH",
                    "CRITICAL"
                ],
                "type": "string",
                "description": "* `LOW` - Bajo\n* `MEDIUM` - Medio\n* `HIGH` - Alto\n* `CRITICAL` - Crítico"
            },
            "SmartContract": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "contract_type": {
                        "$ref": "#/components/schemas/SmartContractContractTypeEnum"
                    },
                    "contract_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "short_address": {
                        "type": "string",
                        "readOnly": true
                    },
                    "abi": {},
                    "abi_prettified": {
                        "type": "string",
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "is_active_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deployment_block": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "format": "int64"
                    },
                    "deployment_tx_hash": {
                        "type": "string",
                        "maxLength": 66
                    },
                    "deployer_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "implementation_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "proxy_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "is_upgradeable": {
                        "type": "boolean"
                    },
                    "is_upgradeable_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "admin_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deployment_polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "abi",
                    "abi_prettified",
                    "address",
                    "contract_type",
                    "contract_type_display",
                    "created_at",
                    "deployer_address",
                    "deployment_block",
                    "deployment_polyscan_url",
                    "deployment_tx_hash",
                    "id",
                    "is_active_display",
                    "is_upgradeable_display",
                    "name",
                    "polyscan_url",
                    "short_address",
                    "updated_at"
                ]
            },
            "SmartContractContractTypeEnum": {
                "enum": [
                    "NFT",
                    "TOKEN",
                    "REGISTRY",
                    "IOT",
                    "BATCH"
                ],
                "type": "string",
                "description": "* `NFT` - Animal NFT\n* `TOKEN` - Ganado Token\n* `REGISTRY` - Registry\n* `IOT` - IoT Manager\n* `BATCH` - Batch Manager"
            },
            "SourceEnum": {
                "enum": [
                    "VETERINARIAN",
                    "IOT_SENSOR",
                    "FARMER",
                    "SYSTEM"
                ],
                "type": "string",
                "description": "* `VETERINARIAN` - Veterinario\n* `IOT_SENSOR` - Sensor IoT\n* `FARMER` - Granjero\n* `SYSTEM` - Sistema Automático"
            },
            "StakingPool": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer"
                    },
                    "user_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "user_wallet": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tokens_staked": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "staking_start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "staking_duration": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "apy": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$"
                    },
                    "rewards_earned": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "blockchain_staking_id": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "staking_status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "days_remaining": {
                        "type": "string",
                        "readOnly": true
                    },
                    "estimated_rewards": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "apy",
                    "days_remaining",
                    "estimated_rewards",
                    "id",
                    "polyscan_url",
                    "staking_duration",
                    "staking_start",
                    "staking_status",
                    "tokens_staked",
                    "user",
                    "user_email",
                    "user_name",
                    "user_wallet"
                ]
            },
            "StateEnum": {
                "enum": [
                    "PENDING",
                    "CONFIRMED",
                    "FAILED",
                    "REVERTED"
                ],
                "type": "string",
                "description": "* `PENDING` - Pending\n* `CONFIRMED` - Confirmed\n* `FAILED` - Failed\n* `REVERTED` - Reverted"
            },
            "Status7c0Enum": {
                "enum": [
                    "CREATED",
                    "IN_TRANSIT",
                    "DELIVERED",
                    "CANCELLED",
                    "PROCESSING",
                    "QUALITY_CHECK"
                ],
                "type": "string",
                "description": "* `CREATED` - Creado\n* `IN_TRANSIT` - En Tránsito\n* `DELIVERED` - Entregado\n* `CANCELLED` - Cancelado\n* `PROCESSING` - Procesando\n* `QUALITY_CHECK` - Control de Calidad"
            },
            "SystemMetrics": {
                "type": "object",
                "description": "Serializer para métricas del sistema",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "total_animals": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "total_users": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "total_transactions": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "active_devices": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "average_gas_price": {
                        "type": "number",
                        "format": "double"
                    },
                    "blockchain_events": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "health_alerts": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "producer_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "vet_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "frigorifico_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "auditor_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "avg_response_time": {
                        "type": "number",
                        "format": "double"
                    },
                    "error_rate": {
                        "type": "number",
                        "format": "double"
                    },
                    "system_uptime": {
                        "type": "number",
                        "format": "double"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "date",
                    "id"
                ]
            },
            "ThemeEnum": {
                "enum": [
                    "light",
                    "dark",
                    "auto"
                ],
                "type": "string",
                "description": "* `light` - Claro\n* `dark` - Oscuro\n* `auto` - Automático"
            },
            "TokenObtainPair": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "password",
                    "refresh",
                    "username"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TokenTypeEnum": {
                "enum": [
                    "READ",
                    "WRITE",
                    "ADMIN",
                    "IOT"
                ],
                "type": "string",
                "description": "* `READ` - Solo Lectura\n* `WRITE` - Lectura y Escritura\n* `ADMIN` - Administración\n* `IOT` - Dispositivo IoT"
            },
            "Trade": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "listing": {
                        "type": "integer"
                    },
                    "animal_ear_tag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "buyer": {
                        "type": "integer"
                    },
                    "buyer_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "seller_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "transaction_hash": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "trade_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "price": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "platform_fee": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "status": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "animal_ear_tag",
                    "buyer",
                    "buyer_name",
                    "id",
                    "listing",
                    "platform_fee",
                    "polyscan_url",
                    "price",
                    "seller_name",
                    "status_display",
                    "trade_date",
                    "transaction_hash"
                ]
            },
            "TransactionPool": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "transaction_hash": {
                        "type": "string",
                        "maxLength": 66
                    },
                    "short_hash": {
                        "type": "string",
                        "readOnly": true
                    },
                    "raw_transaction": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TransactionPoolStatusEnum"
                    },
                    "status_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "retry_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "last_retry": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "polyscan_url",
                    "raw_transaction",
                    "short_hash",
                    "status_display",
                    "transaction_hash",
                    "updated_at"
                ]
            },
            "TransactionPoolStatusEnum": {
                "enum": [
                    "PENDING",
                    "PROCESSING",
                    "CONFIRMED",
                    "FAILED"
                ],
                "type": "string",
                "description": "* `PENDING` - Pending\n* `PROCESSING` - Processing\n* `CONFIRMED` - Confirmed\n* `FAILED` - Failed"
            },
            "TransactionStatus": {
                "type": "object",
                "properties": {
                    "transaction_hash": {
                        "type": "string",
                        "maxLength": 66
                    },
                    "status": {
                        "$ref": "#/components/schemas/TransactionStatusStatusEnum"
                    },
                    "block_number": {
                        "type": "integer",
                        "nullable": true
                    },
                    "gas_used": {
                        "type": "integer",
                        "nullable": true
                    },
                    "confirmations": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "status",
                    "transaction_hash"
                ]
            },
            "TransactionStatusStatusEnum": {
                "enum": [
                    "PENDING",
                    "CONFIRMED",
                    "FAILED"
                ],
                "type": "string",
                "description": "* `PENDING` - Pending\n* `CONFIRMED` - Confirmed\n* `FAILED` - Failed"
            },
            "UpdateHealth": {
                "type": "object",
                "properties": {
                    "animal_id": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "health_status": {
                        "$ref": "#/components/schemas/HealthStatusEnum"
                    },
                    "source": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SourceEnum"
                            }
                        ],
                        "default": "VETERINARIAN"
                    },
                    "veterinarian_wallet": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "iot_device_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "notes": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "temperature": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "heart_rate": {
                        "type": "integer",
                        "maximum": 200,
                        "minimum": 30,
                        "nullable": true
                    },
                    "movement_activity": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,3}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    }
                },
                "required": [
                    "animal_id",
                    "health_status"
                ]
            },
            "UserActivityLog": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer",
                        "title": "Usuario"
                    },
                    "user_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "action": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActionEnum"
                            }
                        ],
                        "title": "Acción"
                    },
                    "action_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "ip_address": {
                        "type": "string",
                        "nullable": true,
                        "title": "Dirección IP"
                    },
                    "user_agent": {
                        "type": "string"
                    },
                    "metadata": {
                        "title": "Metadatos"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "blockchain_tx_hash": {
                        "type": "string",
                        "title": "Hash de Transacción",
                        "maxLength": 66
                    },
                    "short_tx_hash": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "action",
                    "action_display",
                    "id",
                    "short_tx_hash",
                    "timestamp",
                    "user",
                    "user_username"
                ]
            },
            "UserDetail": {
                "type": "object",
                "description": "Serializer detallado para usuario con información extendida",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "title": "Nombre de usuario",
                        "description": "Requerido. 150 carácteres como máximo. Únicamente letras, dígitos y @/./+/-/_ ",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Dirección de correo electrónico",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "title": "Nombre",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Apellidos",
                        "maxLength": 150
                    },
                    "wallet_address": {
                        "type": "string",
                        "title": "Dirección Wallet",
                        "maxLength": 42
                    },
                    "wallet_short": {
                        "type": "string",
                        "readOnly": true
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "title": "Rol de Sistema"
                    },
                    "role_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "title": "Verificado en Blockchain"
                    },
                    "is_blockchain_active": {
                        "type": "boolean",
                        "title": "Activo en Blockchain"
                    },
                    "profile_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Imagen de Perfil"
                    },
                    "phone_number": {
                        "type": "string",
                        "title": "Teléfono",
                        "maxLength": 20
                    },
                    "company": {
                        "type": "string",
                        "title": "Empresa/Organización",
                        "maxLength": 100
                    },
                    "location": {
                        "type": "string",
                        "title": "Ubicación",
                        "maxLength": 200
                    },
                    "bio": {
                        "type": "string",
                        "title": "Biografía"
                    },
                    "website": {
                        "type": "string",
                        "format": "uri",
                        "title": "Sitio Web",
                        "maxLength": 200
                    },
                    "twitter_handle": {
                        "type": "string",
                        "title": "Twitter",
                        "maxLength": 50
                    },
                    "discord_handle": {
                        "type": "string",
                        "title": "Discord",
                        "maxLength": 50
                    },
                    "blockchain_roles": {
                        "title": "Roles en Blockchain",
                        "description": "Roles asignados en los contratos inteligentes"
                    },
                    "profile_completion": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Fecha de alta"
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Último inicio de sesión"
                    },
                    "preferences": {
                        "type": "string",
                        "readOnly": true
                    },
                    "activity_logs": {
                        "type": "string",
                        "readOnly": true
                    },
                    "notifications": {
                        "type": "string",
                        "readOnly": true
                    },
                    "detailed_roles": {
                        "type": "string",
                        "readOnly": true
                    },
                    "reputation_scores": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "activity_logs",
                    "date_joined",
                    "detailed_roles",
                    "id",
                    "last_login",
                    "notifications",
                    "preferences",
                    "profile_completion",
                    "reputation_scores",
                    "role_display",
                    "username",
                    "wallet_address",
                    "wallet_short"
                ]
            },
            "UserList": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "title": "Nombre de usuario",
                        "description": "Requerido. 150 carácteres como máximo. Únicamente letras, dígitos y @/./+/-/_ ",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "title": "Nombre",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Apellidos",
                        "maxLength": 150
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Dirección de correo electrónico",
                        "maxLength": 254
                    },
                    "wallet_address": {
                        "type": "string",
                        "title": "Dirección Wallet",
                        "maxLength": 42
                    },
                    "wallet_short": {
                        "type": "string",
                        "readOnly": true
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "title": "Rol de Sistema"
                    },
                    "role_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "title": "Verificado en Blockchain"
                    },
                    "company": {
                        "type": "string",
                        "title": "Empresa/Organización",
                        "maxLength": 100
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Fecha de alta"
                    }
                },
                "required": [
                    "id",
                    "role_display",
                    "username",
                    "wallet_address",
                    "wallet_short"
                ]
            },
            "UserPreference": {
                "type": "object",
                "properties": {
                    "email_notifications": {
                        "type": "boolean",
                        "title": "Notificaciones por Email"
                    },
                    "push_notifications": {
                        "type": "boolean",
                        "title": "Notificaciones Push"
                    },
                    "language": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LanguageEnum"
                            }
                        ],
                        "title": "Idioma"
                    },
                    "theme": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ThemeEnum"
                            }
                        ],
                        "title": "Tema"
                    },
                    "animals_per_page": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "title": "Animales por Página"
                    },
                    "enable_animations": {
                        "type": "boolean",
                        "title": "Habilitar Animaciones"
                    }
                }
            },
            "UserProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "title": "Dirección de correo electrónico"
                    },
                    "username": {
                        "type": "string",
                        "title": "Nombre de usuario",
                        "description": "Requerido. 150 carácteres como máximo. Únicamente letras, dígitos y @/./+/-/_ ",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "first_name": {
                        "type": "string",
                        "title": "Nombre",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Apellidos",
                        "maxLength": 150
                    },
                    "wallet_address": {
                        "type": "string",
                        "title": "Dirección Wallet",
                        "maxLength": 42
                    },
                    "wallet_short": {
                        "type": "string",
                        "readOnly": true
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "title": "Rol de Sistema"
                    },
                    "role_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Verificado en Blockchain"
                    },
                    "is_blockchain_active": {
                        "type": "boolean",
                        "title": "Activo en Blockchain"
                    },
                    "verification_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Fecha de Verificación"
                    },
                    "profile_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Imagen de Perfil"
                    },
                    "phone_number": {
                        "type": "string",
                        "title": "Teléfono",
                        "maxLength": 20
                    },
                    "company": {
                        "type": "string",
                        "title": "Empresa/Organización",
                        "maxLength": 100
                    },
                    "location": {
                        "type": "string",
                        "title": "Ubicación",
                        "maxLength": 200
                    },
                    "bio": {
                        "type": "string",
                        "title": "Biografía"
                    },
                    "website": {
                        "type": "string",
                        "format": "uri",
                        "title": "Sitio Web",
                        "maxLength": 200
                    },
                    "twitter_handle": {
                        "type": "string",
                        "title": "Twitter",
                        "maxLength": 50
                    },
                    "discord_handle": {
                        "type": "string",
                        "title": "Discord",
                        "maxLength": 50
                    },
                    "blockchain_roles": {
                        "title": "Roles en Blockchain",
                        "description": "Roles asignados en los contratos inteligentes"
                    },
                    "has_blockchain_roles": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "primary_blockchain_role": {
                        "type": "string",
                        "readOnly": true
                    },
                    "last_blockchain_sync": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Última Sincronización Blockchain"
                    },
                    "profile_completion": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Fecha de alta"
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Último inicio de sesión"
                    }
                },
                "required": [
                    "date_joined",
                    "email",
                    "has_blockchain_roles",
                    "id",
                    "is_verified",
                    "last_blockchain_sync",
                    "last_login",
                    "primary_blockchain_role",
                    "profile_completion",
                    "role_display",
                    "username",
                    "verification_date",
                    "wallet_address",
                    "wallet_short"
                ]
            },
            "UserRegistration": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Dirección de correo electrónico",
                        "maxLength": 254
                    },
                    "username": {
                        "type": "string",
                        "title": "Nombre de usuario",
                        "description": "Requerido. 150 carácteres como máximo. Únicamente letras, dígitos y @/./+/-/_ ",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 150
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password2": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "first_name": {
                        "type": "string",
                        "title": "Nombre",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Apellidos",
                        "maxLength": 150
                    },
                    "wallet_address": {
                        "type": "string",
                        "maxLength": 42
                    },
                    "role": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RoleEnum"
                            }
                        ],
                        "title": "Rol de Sistema"
                    },
                    "phone_number": {
                        "type": "string",
                        "title": "Teléfono",
                        "maxLength": 20
                    },
                    "company": {
                        "type": "string",
                        "title": "Empresa/Organización",
                        "maxLength": 100
                    },
                    "location": {
                        "type": "string",
                        "title": "Ubicación",
                        "maxLength": 200
                    }
                },
                "required": [
                    "email",
                    "first_name",
                    "last_name",
                    "password",
                    "password2",
                    "username",
                    "wallet_address"
                ]
            },
            "UserRole": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "type": "integer"
                    },
                    "user_username": {
                        "type": "string",
                        "readOnly": true
                    },
                    "role_type": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "role_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scope_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ScopeTypeEnum"
                            }
                        ],
                        "default": "GLOBAL"
                    },
                    "scope_type_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "scope_id": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "granted_by": {
                        "type": "integer",
                        "nullable": true
                    },
                    "granted_by_username": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true
                    },
                    "granted_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "granted_at",
                    "granted_by_username",
                    "id",
                    "role_type",
                    "role_type_display",
                    "scope_id",
                    "scope_type_display",
                    "user",
                    "user_username"
                ]
            },
            "UserUpdate": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "title": "Nombre",
                        "maxLength": 150
                    },
                    "last_name": {
                        "type": "string",
                        "title": "Apellidos",
                        "maxLength": 150
                    },
                    "profile_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "title": "Imagen de Perfil"
                    },
                    "phone_number": {
                        "type": "string",
                        "title": "Teléfono",
                        "maxLength": 20
                    },
                    "company": {
                        "type": "string",
                        "title": "Empresa/Organización",
                        "maxLength": 100
                    },
                    "location": {
                        "type": "string",
                        "title": "Ubicación",
                        "maxLength": 200
                    },
                    "bio": {
                        "type": "string",
                        "title": "Biografía"
                    },
                    "website": {
                        "type": "string",
                        "format": "uri",
                        "title": "Sitio Web",
                        "maxLength": 200
                    },
                    "twitter_handle": {
                        "type": "string",
                        "title": "Twitter",
                        "maxLength": 50
                    },
                    "discord_handle": {
                        "type": "string",
                        "title": "Discord",
                        "maxLength": 50
                    }
                }
            },
            "Vote": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "proposal": {
                        "type": "integer"
                    },
                    "proposal_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "voter": {
                        "type": "integer"
                    },
                    "voter_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "voter_email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "vote_value": {
                        "type": "boolean"
                    },
                    "vote_value_display": {
                        "type": "string",
                        "readOnly": true
                    },
                    "voting_power": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,18}(?:\\.\\d{0,2})?$"
                    },
                    "blockchain_vote_hash": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "polyscan_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "blockchain_vote_hash",
                    "created_at",
                    "id",
                    "polyscan_url",
                    "proposal",
                    "proposal_title",
                    "vote_value",
                    "vote_value_display",
                    "voter",
                    "voter_email",
                    "voter_name",
                    "voting_power"
                ]
            }
        },
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            },
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}