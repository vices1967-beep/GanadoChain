# Generated by Django 5.2.6 on 2025-09-24 20:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cattle', '0007_alter_animalcertification_animal'),
        ('certification', '0001_initial'),
        ('core', '0002_blockchainnetwork_crosschainmanager_starknetcontract_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsumerTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('BASIC', 'Básico (Gratuito)'), ('PREMIUM', 'Premium'), ('EXPERT', 'Experto'), ('ENTERPRISE', 'Empresarial')], max_length=20, unique=True)),
                ('description', models.TextField(verbose_name='Descripción')),
                ('monthly_fee_usd', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Tarifa Mensual (USD)')),
                ('pricing_multichain', models.JSONField(default=dict, help_text="Precios en diferentes criptomonedas: {'MATIC': 5.0, 'ETH': 0.002}", verbose_name='Precios Multichain')),
                ('accessible_data', models.JSONField(default=list, help_text='Lista de categorías de datos accesibles', verbose_name='Datos Accesibles')),
                ('max_queries_per_month', models.IntegerField(default=100, verbose_name='Máximo de Consultas/Mes')),
                ('can_access_premium_certs', models.BooleanField(default=False, verbose_name='Acceso a Certificaciones Premium')),
                ('can_export_data', models.BooleanField(default=False, verbose_name='Puede Exportar Datos')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Nivel de Consumidor',
                'verbose_name_plural': 'Niveles de Consumidor',
                'ordering': ['monthly_fee_usd'],
            },
        ),
        migrations.CreateModel(
            name='ConsumerAccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_tier', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cattle.animal')),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConsumerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_cryptocurrency', models.CharField(default='MATIC', max_length=20, verbose_name='Criptomoneda Preferida')),
                ('total_queries', models.IntegerField(default=0, verbose_name='Total de Consultas')),
                ('queries_this_month', models.IntegerField(default=0, verbose_name='Consultas Este Mes')),
                ('last_query_date', models.DateTimeField(blank=True, null=True, verbose_name='Última Consulta')),
                ('subscription_active', models.BooleanField(default=False, verbose_name='Suscripción Activa')),
                ('subscription_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Inicio de Suscripción')),
                ('subscription_end_date', models.DateTimeField(blank=True, null=True, verbose_name='Fin de Suscripción')),
                ('company_name', models.CharField(blank=True, max_length=200, verbose_name='Nombre de Empresa')),
                ('vat_number', models.CharField(blank=True, max_length=50, verbose_name='NIF/CIF')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_payment_network', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.blockchainnetwork', verbose_name='Red de Pago Preferida')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='consumer_profile', to=settings.AUTH_USER_MODEL)),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='consumers', to='consumer.consumertier')),
            ],
            options={
                'verbose_name': 'Perfil de Consumidor',
                'verbose_name_plural': 'Perfiles de Consumidor',
            },
        ),
        migrations.CreateModel(
            name='QRCodeAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qr_code', models.CharField(max_length=100, unique=True, verbose_name='Código QR')),
                ('cut_of_meat', models.CharField(blank=True, max_length=100, verbose_name='Corte de Carne')),
                ('public_data', models.JSONField(default=dict, help_text='Información básica visible sin autenticación', verbose_name='Datos Públicos')),
                ('premium_data', models.JSONField(default=dict, help_text='Información detallada para suscriptores', verbose_name='Datos Premium')),
                ('expert_data', models.JSONField(default=dict, help_text='Información técnica avanzada', verbose_name='Datos Experto')),
                ('ipfs_hash', models.CharField(blank=True, max_length=255, verbose_name='Hash IPFS')),
                ('blockchain_verified', models.BooleanField(default=False, verbose_name='Verificado en Blockchain')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cattle.animal', verbose_name='Animal')),
                ('certifications', models.ManyToManyField(blank=True, to='certification.certification', verbose_name='Certificaciones')),
            ],
            options={
                'verbose_name': 'Acceso por QR Code',
                'verbose_name_plural': 'Accesos por QR Code',
                'indexes': [models.Index(fields=['qr_code'], name='consumer_qr_qr_code_17986e_idx'), models.Index(fields=['animal'], name='consumer_qr_animal__16ce2c_idx')],
            },
        ),
    ]
